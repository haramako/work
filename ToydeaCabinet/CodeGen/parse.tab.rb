#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.6.0
# from Racc grammar file "".
#

require 'racc/parser.rb'
module Pandora
  module CodeGen
    class Parser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
    11,    11,    12,    12,     2,     3,     4,     5,     6,     7,
     8,    13,    15,    16,    18,    18,    20,    23,    24,    25,
    26,    27,    23 ]

racc_action_check = [
     8,    10,     8,    10,     0,     1,     2,     3,     4,     6,
     7,     9,    11,    12,    15,    16,    17,    18,    19,    21,
    22,    23,    26 ]

racc_action_pointer = [
     2,     5,     3,     7,     4,   nil,     5,     5,    -7,     5,
    -6,     9,    10,   nil,   nil,     4,     5,     8,    13,    10,
   nil,     8,     8,    17,   nil,   nil,    18,   nil,   nil ]

racc_action_default = [
   -11,   -11,   -11,   -11,   -11,    29,   -11,   -11,    -2,   -11,
    -2,   -11,   -11,    -1,    -3,   -11,   -11,   -11,    -7,   -11,
    -4,   -11,    -8,   -11,    -5,    -6,    -7,   -10,    -9 ]

racc_goto_table = [
    21,     9,     1,    14,    17,    19,   nil,   nil,    28 ]

racc_goto_check = [
     5,     2,     1,     2,     4,     4,   nil,   nil,     5 ]

racc_goto_pointer = [
   nil,     2,    -7,   nil,   -11,   -18,   nil ]

racc_goto_default = [
   nil,   nil,   nil,    10,   nil,   nil,    22 ]

racc_reduce_table = [
  0, 0, :racc_error,
  7, 14, :_reduce_1,
  0, 15, :_reduce_2,
  2, 15, :_reduce_3,
  4, 16, :_reduce_4,
  4, 16, :_reduce_5,
  3, 17, :_reduce_6,
  0, 18, :_reduce_7,
  1, 18, :_reduce_8,
  3, 18, :_reduce_9,
  2, 19, :_reduce_10 ]

racc_reduce_n = 11

racc_shift_n = 29

racc_token_table = {
  false => 0,
  :error => 1,
  :TABLE => 2,
  :NUMBER => 3,
  :IDENT => 4,
  "{" => 5,
  "}" => 6,
  :INDEX => 7,
  ";" => 8,
  :KEY => 9,
  "(" => 10,
  ")" => 11,
  "," => 12 }

racc_nt_base = 13

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "TABLE",
  "NUMBER",
  "IDENT",
  "\"{\"",
  "\"}\"",
  "INDEX",
  "\";\"",
  "KEY",
  "\"(\"",
  "\")\"",
  "\",\"",
  "$start",
  "table_decl",
  "index_decls",
  "index_decl",
  "params",
  "param_list",
  "param_element" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parse.y', 3)
  def _reduce_1(val, _values, result)
     result = Table.new(val[1], val[2], val[3], val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 5)
  def _reduce_2(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 6)
  def _reduce_3(val, _values, result)
     result = [val[0]].concat(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 8)
  def _reduce_4(val, _values, result)
     result = Index.new(val[1], val[2], [])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 9)
  def _reduce_5(val, _values, result)
     result = Index.new(val[1], val[2], ['unique'])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 11)
  def _reduce_6(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 13)
  def _reduce_7(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 14)
  def _reduce_8(val, _values, result)
     result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 15)
  def _reduce_9(val, _values, result)
     result = [val[0]].concat(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parse.y', 17)
  def _reduce_10(val, _values, result)
     result = Param.new(val[0], val[1])
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

    end   # class Parser
  end   # module CodeGen
end   # module Pandora
