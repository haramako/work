#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.8
# from Racc grammer file "".
#

require 'racc/parser.rb'
class FcParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
    52,    53,    48,    49,    50,    51,    46,    47,    44,    45,
    42,    43,    41,    28,     3,    55,    30,    38,     4,     5,
     6,     7,    95,    39,    28,   102,    37,    30,    96,    36,
    39,    66,    97,    52,    53,    29,    31,    61,    35,    64,
    65,    67,    68,    69,    34,    28,    29,    31,    30,    93,
    28,    92,    66,    30,    28,    32,    28,    30,    61,    30,
    64,    65,    67,    68,    69,    26,    28,    29,    31,    30,
    90,    28,    29,    31,    30,    89,    29,    31,    29,    31,
    28,    26,    28,    30,    23,    30,    52,    53,    29,    31,
    52,    53,    28,    29,    31,    30,    52,    53,    23,    66,
    52,    53,    29,    31,    29,    31,    98,    64,    65,    67,
    68,    69,    23,    28,    29,    31,    30,    19,    28,    17,
    66,    30,     8,    58,    28,    16,    61,    30,    64,    65,
    67,    68,    69,    15,    28,    29,    31,    30,     3,    14,
    29,    31,     4,     5,     6,     7,    29,    31,    28,    13,
    28,    30,    28,    30,    12,    30,    29,    31,    28,    52,
    53,    30,    28,    11,    28,    30,    28,    30,    10,    30,
    29,    31,    29,    31,    29,    31,    28,   110,    70,    30,
    29,    31,   nil,    66,    29,    31,    29,    31,    29,    31,
    86,    64,    65,    67,    68,    69,   nil,    28,    29,    31,
    30,   nil,   nil,   nil,   nil,   nil,    28,   nil,    28,    30,
   nil,    30,   nil,    60,    28,    66,   nil,    30,   nil,    29,
    31,    61,   nil,    64,    65,    67,    68,    69,    29,    31,
    29,    31,   nil,   nil,   nil,   nil,    29,    31,    52,    53,
    48,    49,    50,    51,    46,    47,    44,    45,    42,    43,
    41,   nil,   nil,   nil,    88,    52,    53,    48,    49,    50,
    51,    46,    47,    44,    45,    42,    43,    41,   nil,   nil,
   nil,   103,    52,    53,    48,    49,    50,    51,    46,    47,
    44,    45,    42,    43,    41,   nil,   nil,   nil,    40,    52,
    53,    48,    49,    50,    51,    46,    47,    44,    45,    42,
    43,    41,   nil,   nil,   105,    52,    53,    48,    49,    50,
    51,    46,    47,    44,    45,    42,    43,    41,   nil,   nil,
   106,    52,    53,    48,    49,    50,    51,    46,    47,    44,
    45,    42,    43,    41,    52,    53,    48,    49,    50,    51,
    46,    47,    44,    45,    42,    43,    41,    52,    53,    48,
    49,    50,    51,    46,    47,    44,    45,    42,    43,    41,
    52,    53,    48,    49,    50,    51,    46,    47,    44,    45,
    42,    43,    41,    52,    53,    48,    49,    50,    51,    46,
    47,    44,    45,    42,    43,    41,    52,    53,    48,    49,
    50,    51,    46,    47,    44,    45,    52,    53,    48,    49,
    50,    51,    46,    47,    44,    45,    52,    53,    48,    49,
    50,    51,    46,    47,    52,    53,    48,    49,    50,    51,
    46,    47 ]

racc_action_check = [
    84,    84,    84,    84,    84,    84,    84,    84,    84,    84,
    84,    84,    84,    17,     0,    34,    17,    25,     0,     0,
     0,     0,    83,    25,   106,    91,    24,   106,    83,    23,
    91,   106,    84,    78,    78,    17,    17,   106,    21,   106,
   106,   106,   106,   106,    20,   105,   106,   106,   105,    68,
    51,    67,   105,    51,    50,    18,    49,    50,   105,    49,
   105,   105,   105,   105,   105,    66,    96,   105,   105,    96,
    65,    48,    51,    51,    48,    64,    50,    50,    49,    49,
    90,    16,    89,    90,    35,    89,    81,    81,    96,    96,
    79,    79,    85,    48,    48,    85,    77,    77,    14,    85,
    76,    76,    90,    90,    89,    89,    85,    85,    85,    85,
    85,    85,    13,   110,    85,    85,   110,    12,    47,    11,
   110,    47,     1,    37,    53,    10,   110,    53,   110,   110,
   110,   110,   110,     8,    19,   110,   110,    19,     1,     7,
    47,    47,     1,     1,     1,     1,    53,    53,    46,     6,
    45,    46,    44,    45,     5,    44,    19,    19,    43,    80,
    80,    43,    42,     4,    28,    42,    41,    28,     3,    41,
    46,    46,    45,    45,    44,    44,    61,   107,    39,    61,
    43,    43,   nil,    61,    42,    42,    28,    28,    41,    41,
    61,    61,    61,    61,    61,    61,   nil,    69,    61,    61,
    69,   nil,   nil,   nil,   nil,   nil,    36,   nil,    38,    36,
   nil,    38,   nil,    38,    52,    38,   nil,    52,   nil,    69,
    69,    38,   nil,    38,    38,    38,    38,    38,    36,    36,
    38,    38,   nil,   nil,   nil,   nil,    52,    52,    63,    63,
    63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
    63,   nil,   nil,   nil,    63,    94,    94,    94,    94,    94,
    94,    94,    94,    94,    94,    94,    94,    94,   nil,   nil,
   nil,    94,    27,    27,    27,    27,    27,    27,    27,    27,
    27,    27,    27,    27,    27,   nil,   nil,   nil,    27,   100,
   100,   100,   100,   100,   100,   100,   100,   100,   100,   100,
   100,   100,   nil,   nil,   100,   101,   101,   101,   101,   101,
   101,   101,   101,   101,   101,   101,   101,   101,   nil,   nil,
   101,   104,   104,   104,   104,   104,   104,   104,   104,   104,
   104,   104,   104,   104,    33,    33,    33,    33,    33,    33,
    33,    33,    33,    33,    33,    33,    33,    57,    57,    57,
    57,    57,    57,    57,    57,    57,    57,    57,    57,    57,
    82,    82,    82,    82,    82,    82,    82,    82,    82,    82,
    82,    82,    82,    71,    71,    71,    71,    71,    71,    71,
    71,    71,    71,    71,    71,    71,    72,    72,    72,    72,
    72,    72,    72,    72,    72,    72,    73,    73,    73,    73,
    73,    73,    73,    73,    73,    73,    74,    74,    74,    74,
    74,    74,    74,    74,    75,    75,    75,    75,    75,    75,
    75,    75 ]

racc_action_pointer = [
    -2,   122,   nil,   151,   146,   137,   146,   136,   133,   nil,
   122,   104,    91,    95,    81,   nil,    64,    -1,    36,   120,
    26,    14,   nil,     4,     8,    -1,   nil,   269,   150,   nil,
   nil,   nil,   nil,   331,    -4,    67,   192,   104,   194,   161,
   nil,   152,   148,   144,   138,   136,   134,   104,    57,    42,
    40,    36,   200,   110,   nil,   nil,   nil,   344,   nil,   nil,
   nil,   162,   nil,   235,    72,    67,    48,    32,    30,   183,
   nil,   370,   383,   393,   403,   411,    97,    93,    30,    87,
   156,    83,   357,     4,    -3,    78,   nil,   nil,   nil,    68,
    66,     6,   nil,   nil,   252,   nil,    52,   nil,   nil,   nil,
   286,   302,   nil,   nil,   318,    31,    10,   143,   nil,   nil,
    99,   nil ]

racc_action_default = [
   -52,   -52,    -2,   -52,   -52,   -52,   -52,   -52,   -52,    -1,
   -52,   -52,   -13,   -52,   -52,   112,   -17,   -52,   -52,   -52,
   -52,    -9,   -11,   -52,   -52,   -52,   -16,   -52,   -52,   -46,
   -47,   -48,    -6,   -14,   -52,   -52,   -52,   -52,   -52,   -52,
    -5,   -52,   -52,   -52,   -52,   -52,   -52,   -52,   -52,   -52,
   -52,   -52,   -51,   -52,   -43,    -7,   -10,   -12,    -8,    -3,
    -4,   -52,   -20,   -52,   -52,   -52,   -17,   -52,   -52,   -52,
   -15,   -32,   -33,   -34,   -35,   -36,   -37,   -38,   -39,   -40,
   -41,   -42,   -50,   -52,   -52,   -52,   -19,   -22,   -23,   -52,
   -52,   -52,   -27,   -28,   -52,   -44,   -52,   -45,   -18,   -21,
   -52,   -52,   -26,   -29,   -49,   -52,   -52,   -30,   -25,   -24,
   -52,   -31 ]

racc_goto_table = [
    27,    25,    33,    59,     2,     9,    20,    24,     1,    56,
    85,    54,    18,    87,   109,    83,   nil,   nil,   nil,    57,
   nil,   nil,   nil,   nil,    71,    72,    73,    74,    75,    76,
    77,    78,    79,    80,    81,    82,    84,    99,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    91,    94,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   107,   108,   100,   101,   nil,   111,   nil,   nil,   nil,   104 ]

racc_goto_check = [
     5,     3,     5,     4,     2,     2,     7,     7,     1,     9,
    10,     5,     6,    11,    12,    13,   nil,   nil,   nil,     5,
   nil,   nil,   nil,   nil,     5,     5,     5,     5,     5,     5,
     5,     5,     5,     5,     5,     5,     5,    11,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     3,     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     4,     4,     5,     5,   nil,     4,   nil,   nil,   nil,     5 ]

racc_goto_pointer = [
   nil,     8,     4,   -15,   -35,   -17,     0,    -7,   nil,   -26,
   -51,   -48,   -93,   -37 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,    63,   nil,   nil,    21,    22,
   nil,    62,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 39, :_reduce_1,
  1, 39, :_reduce_2,
  6, 40, :_reduce_3,
  6, 40, :_reduce_4,
  5, 40, :_reduce_5,
  4, 40, :_reduce_6,
  5, 40, :_reduce_7,
  5, 40, :_reduce_8,
  1, 45, :_reduce_9,
  3, 46, :_reduce_10,
  1, 46, :_reduce_11,
  3, 47, :_reduce_12,
  0, 44, :_reduce_none,
  2, 44, :_reduce_14,
  3, 41, :_reduce_15,
  1, 41, :_reduce_16,
  0, 41, :_reduce_17,
  3, 42, :_reduce_18,
  2, 42, :_reduce_19,
  1, 42, :_reduce_20,
  2, 48, :_reduce_21,
  1, 48, :_reduce_22,
  2, 49, :_reduce_23,
  6, 49, :_reduce_24,
  5, 49, :_reduce_25,
  3, 49, :_reduce_26,
  2, 49, :_reduce_27,
  2, 49, :_reduce_28,
  3, 49, :_reduce_29,
  0, 50, :_reduce_none,
  2, 50, :_reduce_31,
  3, 43, :_reduce_32,
  3, 43, :_reduce_33,
  3, 43, :_reduce_34,
  3, 43, :_reduce_35,
  3, 43, :_reduce_36,
  3, 43, :_reduce_37,
  3, 43, :_reduce_38,
  3, 43, :_reduce_39,
  3, 43, :_reduce_40,
  3, 43, :_reduce_41,
  3, 43, :_reduce_42,
  2, 43, :_reduce_43,
  4, 43, :_reduce_44,
  4, 43, :_reduce_45,
  1, 43, :_reduce_46,
  1, 43, :_reduce_47,
  1, 43, :_reduce_48,
  3, 51, :_reduce_49,
  1, 51, :_reduce_50,
  0, 51, :_reduce_51 ]

racc_reduce_n = 52

racc_shift_n = 112

racc_token_table = {
  false => 0,
  :error => 1,
  :UMINUS => 2,
  "(" => 3,
  "[" => 4,
  "<" => 5,
  ">" => 6,
  "<=" => 7,
  ">=" => 8,
  "==" => 9,
  "!=" => 10,
  "*" => 11,
  "/" => 12,
  "+" => 13,
  "-" => 14,
  "=" => 15,
  "function" => 16,
  :IDENT => 17,
  ")" => 18,
  ";" => 19,
  "const" => 20,
  "var" => 21,
  "options" => 22,
  "include_bin" => 23,
  "," => 24,
  ":" => 25,
  "@" => 26,
  "{" => 27,
  "}" => 28,
  "if" => 29,
  "while" => 30,
  "break" => 31,
  "continue" => 32,
  "return" => 33,
  "else" => 34,
  "]" => 35,
  :NUMBER => 36,
  :STRING => 37 }

racc_nt_base = 38

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "UMINUS",
  "\"(\"",
  "\"[\"",
  "\"<\"",
  "\">\"",
  "\"<=\"",
  "\">=\"",
  "\"==\"",
  "\"!=\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\"=\"",
  "\"function\"",
  "IDENT",
  "\")\"",
  "\";\"",
  "\"const\"",
  "\"var\"",
  "\"options\"",
  "\"include_bin\"",
  "\",\"",
  "\":\"",
  "\"@\"",
  "\"{\"",
  "\"}\"",
  "\"if\"",
  "\"while\"",
  "\"break\"",
  "\"continue\"",
  "\"return\"",
  "\"else\"",
  "\"]\"",
  "NUMBER",
  "STRING",
  "$start",
  "program",
  "decl",
  "arg_list",
  "block",
  "exp",
  "address",
  "option_list",
  "option_list_sub",
  "option",
  "statement_list",
  "statement",
  "else_block",
  "exp_list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 12)
  def _reduce_1(val, _values, result)
     result = val[0] + [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 13)
  def _reduce_2(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_3(val, _values, result)
     result = [:function, val[1], val[3], val[5]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_4(val, _values, result)
     result = [:function, val[1], val[3]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 18)
  def _reduce_5(val, _values, result)
     result = [:const, val[1], val[3]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 19)
  def _reduce_6(val, _values, result)
     result = [:var, val[1], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_7(val, _values, result)
     result = [:options, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 21)
  def _reduce_8(val, _values, result)
     result = [:include_bin, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 23)
  def _reduce_9(val, _values, result)
     result = Hash[ *val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_10(val, _values, result)
     result = val[0] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_11(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 26)
  def _reduce_12(val, _values, result)
     result = [val[0],val[2]] 
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.y', 28)
  def _reduce_14(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 31)
  def _reduce_15(val, _values, result)
     result = val[0] + [val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 32)
  def _reduce_16(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_17(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 35)
  def _reduce_18(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_19(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 37)
  def _reduce_20(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 39)
  def _reduce_21(val, _values, result)
     result = val[0] + [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 40)
  def _reduce_22(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_23(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 43)
  def _reduce_24(val, _values, result)
     result = [:if, val[2], val[4], val[5]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_25(val, _values, result)
     result = [:while, val[2], val[4]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_26(val, _values, result)
     result = [:var, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_27(val, _values, result)
     result = [:break] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_28(val, _values, result)
     result = [:continue] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_29(val, _values, result)
     result = [:return, val[1]] 
    result
  end
.,.,

# reduce 30 omitted

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_31(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_32(val, _values, result)
     result = [:put, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_33(val, _values, result)
     result = [:add, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_34(val, _values, result)
     result = [:sub, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_35(val, _values, result)
     result = [:mul, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_36(val, _values, result)
     result = [:div, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_37(val, _values, result)
     result = [:eq, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_38(val, _values, result)
     result = [:ne, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_39(val, _values, result)
     result = [:lt, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 60)
  def _reduce_40(val, _values, result)
     result = [:gt, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_41(val, _values, result)
     result = [:le, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 62)
  def _reduce_42(val, _values, result)
     result = [:ge, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_43(val, _values, result)
     result = [:uminus, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_44(val, _values, result)
     result = [:call, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_45(val, _values, result)
     result = [:call, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 66)
  def _reduce_46(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 67)
  def _reduce_47(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 68)
  def _reduce_48(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 70)
  def _reduce_49(val, _values, result)
     result = val[0] + [val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_50(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 72)
  def _reduce_51(val, _values, result)
     result = [] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class FcParser
