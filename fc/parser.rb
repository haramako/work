#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.8
# from Racc grammer file "".
#

require 'racc/parser.rb'
class Parser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
    18,    23,    21,   120,   141,    20,    59,    60,    49,    50,
    47,    48,    75,    68,   100,    72,   101,   115,     6,    25,
   114,   101,     7,    26,     8,     9,    10,    11,    12,    13,
    14,    15,    16,    73,    19,    22,    73,    24,   113,    27,
    18,    23,    21,    59,    60,    20,    59,    60,    49,    50,
    47,    48,    59,    60,    49,    50,   137,    69,     6,    25,
    59,    60,     7,    26,     8,     9,    10,    11,    12,    13,
    14,    15,    16,    35,    19,    22,   105,    24,    35,    27,
    18,    23,    21,    79,    70,    20,    59,    60,    49,    50,
    47,    48,    71,    42,   112,   110,   111,    41,     6,    25,
   123,   124,     7,    26,     8,     9,    10,    11,    12,    13,
    14,    15,    16,   109,    19,    22,    73,    24,   125,    27,
    18,    23,    21,   127,    40,    20,    59,    60,    49,    50,
    47,    48,    59,    60,    49,    50,   148,    39,     6,    25,
    38,   132,     7,    26,     8,     9,    10,    11,    12,    13,
    14,    15,    16,    79,    19,    22,    37,    24,   117,    27,
    18,    23,    21,    35,   117,    20,    18,    23,    21,    74,
   139,    20,   117,    18,    23,    21,    35,    32,    20,    25,
   112,   110,   111,    26,   144,    25,    18,    23,    21,    26,
   145,    20,    25,    79,    19,    22,    26,    24,   147,   109,
    19,    22,    31,    24,    30,    25,   150,    19,    22,    26,
    24,    18,    23,    21,    81,   151,    20,    18,    23,    21,
    19,    22,    20,    24,    18,    23,    21,    28,   117,    20,
    25,   112,   110,   111,    26,    27,    25,    18,    23,    21,
    26,    79,    20,    25,   117,    19,    22,    26,    24,   158,
   109,    19,    22,   nil,    24,   nil,    25,   nil,    19,    22,
    26,    24,    18,    23,    21,   nil,   nil,    20,    18,    23,
    21,    19,    22,    20,    24,    18,    23,    21,   nil,   nil,
    20,    25,   112,   110,   111,    26,   nil,    25,    18,    23,
    21,    26,    43,    20,    25,   nil,    19,    22,    26,    24,
   nil,   109,    19,    22,   nil,    24,   nil,    25,   nil,    19,
    22,    26,    24,    18,    23,    21,   nil,   nil,    20,    18,
    23,    21,    19,    22,    20,    24,    18,    23,    21,   nil,
   nil,    20,    25,   112,   110,   111,    26,   nil,    25,    18,
    23,    21,    26,   nil,    20,    25,   nil,    19,    22,    26,
    24,   nil,   109,    19,    22,   nil,    24,   nil,    25,   nil,
    19,    22,    26,    24,    18,    23,    21,   nil,   nil,    20,
    18,    23,    21,    19,    22,    20,    24,    18,    23,    21,
   nil,   nil,    20,    25,   nil,   nil,   nil,    26,   nil,    25,
    18,    23,    21,    26,   nil,    20,    25,   nil,    19,    22,
    26,    24,   nil,   nil,    19,    22,   nil,    24,   nil,    25,
   nil,    19,    22,    26,    24,    18,    23,    21,   nil,   nil,
    20,    18,    23,    21,    19,    22,    20,    24,    18,    23,
    21,   nil,   nil,    20,    25,   nil,   nil,   nil,    26,   nil,
    25,    18,    23,    21,    26,   nil,    20,    25,   nil,    19,
    22,    26,    24,   nil,   nil,    19,    22,   nil,    24,   nil,
    25,   nil,    19,    22,    26,    24,    18,    23,    21,   nil,
   nil,    20,    18,    23,    21,    19,    22,    20,    24,    18,
    23,    21,   nil,   nil,    20,    25,   nil,   nil,   nil,    26,
   nil,    25,    18,    23,    21,    26,   nil,    20,    25,   nil,
    19,    22,    26,    24,   nil,   nil,    19,    22,   nil,    24,
   nil,    25,   nil,    19,    22,    26,    24,    59,    60,    49,
    50,    47,    48,   nil,   nil,   nil,    19,    22,   nil,    24,
    59,    60,    49,    50,    47,    48,    55,    56,    57,    58,
    53,    54,    46,    51,    52,    59,    60,    49,    50,    47,
    48,    55,    56,    57,    58,    53,    54,    46,    51,    52,
    59,    60,    49,    50,    47,    48,   121,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   143,    59,    60,    49,    50,    47,    48,    55,    56,
    57,    58,    53,    54,    46,    51,    52,   nil,   nil,   nil,
   nil,   nil,   119,    59,    60,    49,    50,    47,    48,    55,
    56,    57,    58,    53,    54,    46,    51,    52,   nil,   nil,
   nil,   nil,   nil,   116,    59,    60,    49,    50,    47,    48,
    55,    56,    57,    58,    53,    54,    46,    51,    52,   nil,
   nil,   nil,   nil,   nil,    99,    59,    60,    49,    50,    47,
    48,    55,    56,    57,    58,    53,    54,    46,    51,    52,
   nil,   nil,    45,    59,    60,    49,    50,    47,    48,    55,
    56,    57,    58,    53,    54,    46,    51,    52,   nil,   nil,
    83,    59,    60,    49,    50,    47,    48,    55,    56,    57,
    58,    53,    54,    46,    51,    52,    59,    60,    49,    50,
    47,    48,    55,    56,    57,    58,    53,    54,    46,    51,
    52,    59,    60,    49,    50,    47,    48,    55,    56,    57,
    58,    53,    54,    46,    51,    52,    59,    60,    49,    50,
    47,    48,    55,    56,    57,    58,    53,    54,    46,    51,
    52,    59,    60,    49,    50,    47,    48,    55,    56,    57,
    58,    53,    54,    46,    51,    52,    59,    60,    49,    50,
    47,    48,    55,    56,    57,    58,    53,    54,    46,    51,
    52,    59,    60,    49,    50,    47,    48,    55,    56,    57,
    58,    53,    54,    46,    51,    52 ]

racc_action_check = [
     0,     0,     0,    97,   126,     0,    95,    95,    95,    95,
    95,    95,    36,    27,    67,    33,    67,    79,     0,     0,
    77,    97,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    36,     0,     0,    33,     0,    76,     0,
   117,   117,   117,    88,    88,   117,    92,    92,    92,    92,
    92,    92,    85,    85,    85,    85,   117,    28,   117,   117,
    87,    87,   117,   117,   117,   117,   117,   117,   117,   117,
   117,   117,   117,    73,   117,   117,    71,   117,    70,   117,
     2,     2,     2,    68,    31,     2,    91,    91,    91,    91,
    91,    91,    32,    15,    74,    74,    74,    14,     2,     2,
   102,   103,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,    74,     2,     2,   104,     2,   105,     2,
   136,   136,   136,   107,    13,   136,    96,    96,    96,    96,
    96,    96,    86,    86,    86,    86,   136,    12,   136,   136,
    11,   113,   136,   136,   136,   136,   136,   136,   136,   136,
   136,   136,   136,   114,   136,   136,    10,   136,   116,   136,
    23,    23,    23,     9,   119,    23,    54,    54,    54,    35,
   124,    54,    81,   127,   127,   127,     8,     7,   127,    23,
   112,   112,   112,    23,   130,    54,    53,    53,    53,    54,
   131,    53,   127,    37,    23,    23,   127,    23,   135,   112,
    54,    54,     6,    54,     5,    53,   141,   127,   127,    53,
   127,   115,   115,   115,    39,   144,   115,    52,    52,    52,
    53,    53,    52,    53,   110,   110,   110,     1,   147,   110,
   115,   145,   145,   145,   115,   149,    52,    55,    55,    55,
    52,   150,    55,   110,   154,   115,   115,   110,   115,   156,
   145,    52,    52,   nil,    52,   nil,    55,   nil,   110,   110,
    55,   110,   101,   101,   101,   nil,   nil,   101,    40,    40,
    40,    55,    55,    40,    55,    16,    16,    16,   nil,   nil,
    16,   101,   139,   139,   139,   101,   nil,    40,    51,    51,
    51,    40,    16,    51,    16,   nil,   101,   101,    16,   101,
   nil,   139,    40,    40,   nil,    40,   nil,    51,   nil,    16,
    16,    51,    16,    18,    18,    18,   nil,   nil,    18,    19,
    19,    19,    51,    51,    19,    51,    20,    20,    20,   nil,
   nil,    20,    18,   108,   108,   108,    18,   nil,    19,    57,
    57,    57,    19,   nil,    57,    20,   nil,    18,    18,    20,
    18,   nil,   108,    19,    19,   nil,    19,   nil,    57,   nil,
    20,    20,    57,    20,    22,    22,    22,   nil,   nil,    22,
    50,    50,    50,    57,    57,    50,    57,    49,    49,    49,
   nil,   nil,    49,    22,   nil,   nil,   nil,    22,   nil,    50,
    48,    48,    48,    50,   nil,    48,    49,   nil,    22,    22,
    49,    22,   nil,   nil,    50,    50,   nil,    50,   nil,    48,
   nil,    49,    49,    48,    49,    56,    56,    56,   nil,   nil,
    56,    60,    60,    60,    48,    48,    60,    48,    47,    47,
    47,   nil,   nil,    47,    56,   nil,   nil,   nil,    56,   nil,
    60,    59,    59,    59,    60,   nil,    59,    47,   nil,    56,
    56,    47,    56,   nil,   nil,    60,    60,   nil,    60,   nil,
    59,   nil,    47,    47,    59,    47,    46,    46,    46,   nil,
   nil,    46,    58,    58,    58,    59,    59,    58,    59,    38,
    38,    38,   nil,   nil,    38,    46,   nil,   nil,   nil,    46,
   nil,    58,    21,    21,    21,    58,   nil,    21,    38,   nil,
    46,    46,    38,    46,   nil,   nil,    58,    58,   nil,    58,
   nil,    21,   nil,    38,    38,    21,    38,    94,    94,    94,
    94,    94,    94,   nil,   nil,   nil,    21,    21,   nil,    21,
    98,    98,    98,    98,    98,    98,    98,    98,    98,    98,
    98,    98,    98,    98,    98,   129,   129,   129,   129,   129,
   129,   129,   129,   129,   129,   129,   129,   129,   129,   129,
    93,    93,    93,    93,    93,    93,    98,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   129,    82,    82,    82,    82,    82,    82,    82,    82,
    82,    82,    82,    82,    82,    82,    82,   nil,   nil,   nil,
   nil,   nil,    82,    80,    80,    80,    80,    80,    80,    80,
    80,    80,    80,    80,    80,    80,    80,    80,   nil,   nil,
   nil,   nil,   nil,    80,    61,    61,    61,    61,    61,    61,
    61,    61,    61,    61,    61,    61,    61,    61,    61,   nil,
   nil,   nil,   nil,   nil,    61,    17,    17,    17,    17,    17,
    17,    17,    17,    17,    17,    17,    17,    17,    17,    17,
   nil,   nil,    17,    44,    44,    44,    44,    44,    44,    44,
    44,    44,    44,    44,    44,    44,    44,    44,   nil,   nil,
    44,    84,    84,    84,    84,    84,    84,    84,    84,    84,
    84,    84,    84,    84,    84,    84,   134,   134,   134,   134,
   134,   134,   134,   134,   134,   134,   134,   134,   134,   134,
   134,    90,    90,    90,    90,    90,    90,    90,    90,    90,
    90,    90,    90,    90,    90,    90,    66,    66,    66,    66,
    66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
    66,   122,   122,   122,   122,   122,   122,   122,   122,   122,
   122,   122,   122,   122,   122,   122,   142,   142,   142,   142,
   142,   142,   142,   142,   142,   142,   142,   142,   142,   142,
   142,    89,    89,    89,    89,    89,    89,    89,    89,    89,
    89,    89,    89,    89,    89,    89 ]

racc_action_pointer = [
    -3,   227,    77,   nil,   nil,   184,   180,   174,   154,   141,
   153,   137,   134,   121,    77,    73,   272,   642,   310,   316,
   323,   489,   361,   157,   nil,   nil,   nil,    10,    57,   nil,
   nil,    81,    66,    -5,   nil,   145,    -8,   171,   476,   191,
   265,   nil,   nil,   nil,   660,   nil,   463,   425,   387,   374,
   367,   285,   214,   183,   163,   234,   412,   336,   469,   438,
   418,   621,   nil,   nil,   nil,   nil,   723,   -25,    61,   nil,
    56,    53,   nil,    51,    91,   nil,    15,   -21,   nil,    -7,
   600,   154,   579,   nil,   678,    49,   129,    57,    40,   768,
   708,    83,    43,   557,   514,     3,   123,   -20,   527,   nil,
   nil,   259,    77,    78,    75,    98,   nil,   108,   330,   nil,
   221,   nil,   177,   121,   131,   208,   140,    37,   nil,   146,
   nil,   nil,   738,   nil,   146,   nil,   -38,   170,   nil,   542,
   161,   149,   nil,   nil,   693,   162,   117,   nil,   nil,   279,
   nil,   203,   753,   nil,   191,   228,   nil,   210,   nil,   193,
   219,   nil,   nil,   nil,   226,   nil,   226,   nil,   nil ]

racc_action_default = [
   -74,   -74,    -1,    -5,    -6,   -74,   -74,   -74,   -74,   -74,
   -74,   -74,   -74,   -74,   -74,   -74,   -74,   -74,   -74,   -74,
   -74,   -74,   -74,   -49,   -44,   -45,   -46,   -74,   -74,    -4,
    -7,   -74,   -74,   -74,   -60,   -74,   -74,   -74,   -74,   -74,
   -74,   -16,   -17,   -18,   -74,   -20,   -74,   -74,   -74,   -74,
   -74,   -74,   -74,   -74,   -74,   -74,   -74,   -74,   -74,   -49,
   -74,   -74,   -37,   -38,   -39,   -40,   -48,   -74,   -74,   159,
   -57,   -74,   -10,   -74,   -74,   -11,   -74,   -53,   -55,   -74,
   -74,   -74,   -74,   -19,   -24,   -25,   -26,   -27,   -28,   -29,
   -30,   -31,   -32,   -33,   -34,   -35,   -36,   -74,   -74,   -23,
   -43,   -74,   -74,   -74,   -58,   -74,   -59,   -62,   -74,   -67,
   -74,   -69,   -73,   -74,   -74,   -74,   -74,   -74,   -14,   -74,
   -41,   -42,   -47,   -52,   -74,    -9,   -64,   -74,   -66,   -74,
   -74,   -72,   -12,   -54,   -56,   -21,   -74,    -3,   -15,   -74,
   -61,   -74,   -63,   -68,   -74,   -74,   -13,   -74,    -2,   -50,
   -74,   -70,   -71,   -22,   -74,   -51,   -74,    -8,   -65 ]

racc_goto_table = [
    29,     2,    76,    33,    36,    44,     1,    61,    62,    63,
    64,    65,    66,   154,   103,   118,   146,   155,   107,    67,
   133,   106,   126,   140,   130,   nil,   nil,    80,   nil,    82,
   nil,   nil,   nil,   102,   nil,    84,    85,    86,    87,    88,
    89,    90,    91,    92,    93,    94,    95,    96,    66,    98,
   135,   nil,   128,   138,   nil,    97,   131,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   104,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   153,   nil,   149,   nil,   nil,   nil,   nil,   157,   152,
   122,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   129,
   nil,   nil,   nil,   nil,   134,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   156,   142,   nil,   136,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    29 ]

racc_goto_check = [
     4,     2,    11,    10,    10,    12,     1,    12,    12,    12,
    12,    12,    12,     9,     7,     3,    13,     6,     8,    14,
    16,    17,    18,    19,    21,   nil,   nil,    12,   nil,    12,
   nil,   nil,   nil,    11,   nil,    12,    12,    12,    12,    12,
    12,    12,    12,    12,    12,    12,    12,    12,    12,    12,
     3,   nil,     8,     3,   nil,    14,     8,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     3,   nil,     8,   nil,   nil,   nil,   nil,     3,     8,
    12,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    12,
   nil,   nil,   nil,   nil,    12,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    11,    12,   nil,     2,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4 ]

racc_goto_pointer = [
   nil,     6,     1,   -66,    -2,   nil,  -132,   -56,   -56,  -136,
    -5,   -35,   -11,  -119,    -4,   nil,   -94,   -52,   -85,  -103,
   nil,   -88 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     3,     4,     5,   nil,   nil,   nil,
   nil,   nil,    17,   nil,   nil,    77,    78,    34,   nil,   nil,
   108,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 44, :_reduce_none,
  3, 46, :_reduce_2,
  2, 46, :_reduce_3,
  2, 45, :_reduce_4,
  1, 45, :_reduce_5,
  1, 47, :_reduce_6,
  2, 48, :_reduce_none,
  9, 48, :_reduce_8,
  5, 48, :_reduce_9,
  3, 48, :_reduce_10,
  3, 48, :_reduce_11,
  5, 48, :_reduce_12,
  6, 48, :_reduce_13,
  4, 48, :_reduce_14,
  5, 48, :_reduce_15,
  2, 48, :_reduce_16,
  2, 48, :_reduce_17,
  2, 48, :_reduce_18,
  3, 48, :_reduce_19,
  2, 48, :_reduce_20,
  0, 56, :_reduce_none,
  2, 56, :_reduce_22,
  3, 55, :_reduce_23,
  3, 55, :_reduce_24,
  3, 55, :_reduce_25,
  3, 55, :_reduce_26,
  3, 55, :_reduce_27,
  3, 55, :_reduce_28,
  3, 55, :_reduce_29,
  3, 55, :_reduce_30,
  3, 55, :_reduce_31,
  3, 55, :_reduce_32,
  3, 55, :_reduce_33,
  3, 55, :_reduce_34,
  3, 55, :_reduce_35,
  3, 55, :_reduce_36,
  2, 55, :_reduce_37,
  2, 55, :_reduce_38,
  2, 55, :_reduce_39,
  2, 55, :_reduce_40,
  4, 55, :_reduce_41,
  4, 55, :_reduce_42,
  3, 55, :_reduce_43,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  3, 57, :_reduce_47,
  1, 57, :_reduce_48,
  0, 57, :_reduce_49,
  0, 52, :_reduce_none,
  1, 52, :_reduce_none,
  4, 49, :_reduce_52,
  1, 54, :_reduce_53,
  3, 58, :_reduce_54,
  1, 58, :_reduce_55,
  3, 59, :_reduce_56,
  0, 50, :_reduce_57,
  1, 50, :_reduce_none,
  3, 53, :_reduce_59,
  1, 53, :_reduce_60,
  5, 60, :_reduce_61,
  0, 61, :_reduce_none,
  2, 61, :_reduce_63,
  0, 62, :_reduce_none,
  4, 62, :_reduce_65,
  2, 51, :_reduce_66,
  1, 51, :_reduce_67,
  3, 63, :_reduce_68,
  1, 63, :_reduce_69,
  4, 63, :_reduce_70,
  3, 64, :_reduce_71,
  1, 64, :_reduce_72,
  0, 64, :_reduce_73 ]

racc_reduce_n = 74

racc_shift_n = 159

racc_token_table = {
  false => 0,
  :error => 1,
  :UMINUS => 2,
  "(" => 3,
  "[" => 4,
  "*" => 5,
  "/" => 6,
  "+" => 7,
  "-" => 8,
  "<" => 9,
  ">" => 10,
  "<=" => 11,
  ">=" => 12,
  "==" => 13,
  "!=" => 14,
  "=" => 15,
  "+=" => 16,
  "-=" => 17,
  "{" => 18,
  "}" => 19,
  ";" => 20,
  "function" => 21,
  :IDENT => 22,
  ")" => 23,
  ":" => 24,
  "include" => 25,
  :STRING => 26,
  "var" => 27,
  "const" => 28,
  "include_bin" => 29,
  "if" => 30,
  "loop" => 31,
  "while" => 32,
  "break" => 33,
  "continue" => 34,
  "return" => 35,
  "else" => 36,
  "!" => 37,
  "&" => 38,
  "]" => 39,
  :NUMBER => 40,
  "," => 41,
  "options" => 42 }

racc_nt_base = 43

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "UMINUS",
  "\"(\"",
  "\"[\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\"<\"",
  "\">\"",
  "\"<=\"",
  "\">=\"",
  "\"==\"",
  "\"!=\"",
  "\"=\"",
  "\"+=\"",
  "\"-=\"",
  "\"{\"",
  "\"}\"",
  "\";\"",
  "\"function\"",
  "IDENT",
  "\")\"",
  "\":\"",
  "\"include\"",
  "STRING",
  "\"var\"",
  "\"const\"",
  "\"include_bin\"",
  "\"if\"",
  "\"loop\"",
  "\"while\"",
  "\"break\"",
  "\"continue\"",
  "\"return\"",
  "\"else\"",
  "\"!\"",
  "\"&\"",
  "\"]\"",
  "NUMBER",
  "\",\"",
  "\"options\"",
  "$start",
  "program",
  "statement_list",
  "block",
  "statement_i",
  "statement",
  "options",
  "var_decl_list_if",
  "type_decl",
  "options_if",
  "var_decl_list",
  "option_list",
  "exp",
  "else_block",
  "exp_list",
  "option_list_sub",
  "option",
  "var_decl",
  "var_init",
  "var_option",
  "type_modifier",
  "type_decl_list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_2(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_3(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 21)
  def _reduce_4(val, _values, result)
     result = val[0] + [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 22)
  def _reduce_5(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 27)
  def _reduce_6(val, _values, result)
     info(val[0]) 
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.y', 30)
  def _reduce_8(val, _values, result)
     result = [:function, val[1], val[3], val[6], val[8]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 31)
  def _reduce_9(val, _values, result)
     result = [:include, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 32)
  def _reduce_10(val, _values, result)
     result = [:var, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_11(val, _values, result)
     result = [:const, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 34)
  def _reduce_12(val, _values, result)
     result = [:include_bin, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_13(val, _values, result)
     result = [:if, val[2], val[4], val[5]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 37)
  def _reduce_14(val, _values, result)
     result = [:loop, val[3]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_15(val, _values, result)
     result = [:while, val[2], val[4]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 39)
  def _reduce_16(val, _values, result)
     result = [:break] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 40)
  def _reduce_17(val, _values, result)
     result = [:continue] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_18(val, _values, result)
     result = [:return] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_19(val, _values, result)
     result = [:return, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_20(val, _values, result)
     result = [:exp, val[0]] 
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_22(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_23(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 49)
  def _reduce_24(val, _values, result)
     result = [:load, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_25(val, _values, result)
     result = [:add, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_26(val, _values, result)
     result = [:sub, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_27(val, _values, result)
     result = [:mul, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_28(val, _values, result)
     result = [:div, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_29(val, _values, result)
     result = [:load, val[0], [:add, val[0], val[2]]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_30(val, _values, result)
     result = [:load, val[1],[:sub, val[0], val[2]]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_31(val, _values, result)
     result = [:eq, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_32(val, _values, result)
     result = [:ne, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_33(val, _values, result)
     result = [:lt, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_34(val, _values, result)
     result = [:gt, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 60)
  def _reduce_35(val, _values, result)
     result = [:le, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_36(val, _values, result)
     result = [:ge, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 62)
  def _reduce_37(val, _values, result)
     result = [:not, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_38(val, _values, result)
     result = [:uminus, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_39(val, _values, result)
     result = [:deref, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_40(val, _values, result)
     result = [:ref, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 66)
  def _reduce_41(val, _values, result)
     result = [:call, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 67)
  def _reduce_42(val, _values, result)
     result = [:index, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 68)
  def _reduce_43(val, _values, result)
     result = [:array, val[1]] 
    result
  end
.,.,

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

module_eval(<<'.,.,', 'parser.y', 73)
  def _reduce_47(val, _values, result)
     result = val[0] + [val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 74)
  def _reduce_48(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 75)
  def _reduce_49(val, _values, result)
     result = [] 
    result
  end
.,.,

# reduce 50 omitted

# reduce 51 omitted

module_eval(<<'.,.,', 'parser.y', 80)
  def _reduce_52(val, _values, result)
     result = [:options, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 82)
  def _reduce_53(val, _values, result)
     result = Hash[ *val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 83)
  def _reduce_54(val, _values, result)
     result = val[0] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_55(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 85)
  def _reduce_56(val, _values, result)
     result = [val[0],val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 89)
  def _reduce_57(val, _values, result)
    result = [] 
    result
  end
.,.,

# reduce 58 omitted

module_eval(<<'.,.,', 'parser.y', 90)
  def _reduce_59(val, _values, result)
     result = val[0]+[val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 91)
  def _reduce_60(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 93)
  def _reduce_61(val, _values, result)
     result = [val[0], val[2], val[3], val[4]] 
    result
  end
.,.,

# reduce 62 omitted

module_eval(<<'.,.,', 'parser.y', 95)
  def _reduce_63(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 64 omitted

module_eval(<<'.,.,', 'parser.y', 96)
  def _reduce_65(val, _values, result)
     result = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 100)
  def _reduce_66(val, _values, result)
     result = val[0]+[val[1]]; 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 101)
  def _reduce_67(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 103)
  def _reduce_68(val, _values, result)
     result = [:array, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 104)
  def _reduce_69(val, _values, result)
     result = [:pointer] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 105)
  def _reduce_70(val, _values, result)
     result = [:lambda, val[1] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 107)
  def _reduce_71(val, _values, result)
     result = val[0] + [val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 108)
  def _reduce_72(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 109)
  def _reduce_73(val, _values, result)
     result = [] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
