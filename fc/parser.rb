#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.8
# from Racc grammer file "".
#

require 'racc/parser.rb'
class FcParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
    33,    34,    31,    32,    29,    30,    28,    19,    12,     6,
    21,    33,    34,    31,    32,    29,    30,    28,    19,     3,
    75,    21,     4,    66,     5,    42,    20,    22,    37,    61,
    40,    41,    43,    44,    45,    25,    19,    20,    22,    21,
    26,    19,     3,    42,    21,     4,    37,     5,    40,    41,
    43,    44,    45,    64,    19,    20,    22,    21,    65,    19,
    20,    22,    21,    19,    17,    71,    21,    19,    26,    15,
    21,    33,    34,    20,    22,    33,    34,    19,    20,    22,
    21,    13,    20,    22,    42,    62,    20,    22,    67,    40,
    41,    43,    44,    45,    23,    19,    20,    22,    21,    11,
    19,    10,    42,    21,    17,    37,    59,    40,    41,    43,
    44,    45,    58,    19,    20,    22,    21,     9,    19,    20,
    22,    21,    19,     8,    19,    21,    79,    21,    46,   nil,
   nil,    19,    20,    22,    21,   nil,    19,    20,    22,    21,
   nil,    20,    22,    20,    22,    19,   nil,   nil,    21,   nil,
    20,    22,    42,   nil,   nil,    20,    22,    40,    41,    43,
    44,    45,   nil,    19,    20,    22,    21,   nil,    19,   nil,
    42,    21,   nil,    37,   nil,    40,    41,    43,    44,    45,
   nil,   nil,    20,    22,   nil,   nil,   nil,    20,    22,    33,
    34,    31,    32,    29,    30,    28,    33,    34,    31,    32,
    72,    33,    34,    31,    32,    29,    30,    28,    33,    34,
    31,    32,    27,    33,    34,    31,    32,    29,    30,    28,
   nil,   nil,   nil,   nil,    57,    33,    34,    31,    32,    29,
    30,    28,   nil,   nil,    74,    33,    34,    31,    32,    29,
    30,    28,    33,    34,    31,    32,    29,    30,    28,    33,
    34,    31,    32,    29,    30,    28,    33,    34,    31,    32,
    29,    30,    28 ]

racc_action_check = [
    54,    54,    54,    54,    54,    54,    54,    13,     8,     1,
    13,    70,    70,    70,    70,    70,    70,    70,    75,     1,
    70,    75,     1,    54,     1,    75,    13,    13,    75,    43,
    75,    75,    75,    75,    75,    16,    74,    75,    75,    74,
    16,    65,     0,    74,    65,     0,    74,     0,    74,    74,
    74,    74,    74,    53,    31,    74,    74,    31,    53,    59,
    65,    65,    59,    58,    12,    60,    58,    32,    60,    10,
    32,    50,    50,    31,    31,    51,    51,    55,    59,    59,
    55,     9,    58,    58,    55,    44,    32,    32,    55,    55,
    55,    55,    55,    55,    14,    79,    55,    55,    79,     6,
    45,     5,    79,    45,    42,    79,    41,    79,    79,    79,
    79,    79,    40,    29,    79,    79,    29,     4,    33,    45,
    45,    33,    30,     3,    19,    30,    76,    19,    26,   nil,
   nil,    34,    29,    29,    34,   nil,    28,    33,    33,    28,
   nil,    30,    30,    19,    19,    37,   nil,   nil,    37,   nil,
    34,    34,    37,   nil,   nil,    28,    28,    37,    37,    37,
    37,    37,   nil,    25,    37,    37,    25,   nil,    15,   nil,
    25,    15,   nil,    25,   nil,    25,    25,    25,    25,    25,
   nil,   nil,    25,    25,   nil,   nil,   nil,    15,    15,    63,
    63,    63,    63,    63,    63,    63,    48,    48,    48,    48,
    63,    18,    18,    18,    18,    18,    18,    18,    49,    49,
    49,    49,    18,    39,    39,    39,    39,    39,    39,    39,
   nil,   nil,   nil,   nil,    39,    69,    69,    69,    69,    69,
    69,    69,   nil,   nil,    69,    24,    24,    24,    24,    24,
    24,    24,    73,    73,    73,    73,    73,    73,    73,    47,
    47,    47,    47,    47,    47,    47,    52,    52,    52,    52,
    52,    52,    52 ]

racc_action_pointer = [
    32,     9,   nil,   112,   106,    90,    99,   nil,     5,    72,
    53,   nil,    53,    -1,    80,   160,    23,   nil,   198,   116,
   nil,   nil,   nil,   nil,   232,   155,   117,   nil,   128,   105,
   114,    46,    59,   110,   123,   nil,   nil,   137,   nil,   210,
   109,   103,    93,    15,    71,    92,   nil,   246,   193,   205,
    68,    72,   253,    41,    -3,    69,   nil,   nil,    55,    51,
    51,   nil,   nil,   186,   nil,    33,   nil,   nil,   nil,   222,
     8,   nil,   nil,   239,    28,    10,   101,   nil,   nil,    87,
   nil ]

racc_action_default = [
   -38,   -38,    -2,   -38,   -38,   -38,   -38,    -1,   -38,   -38,
    -6,    81,   -10,   -38,   -38,   -38,   -38,    -9,   -38,   -38,
   -32,   -33,   -34,    -5,    -7,   -38,   -38,    -4,   -38,   -38,
   -38,   -38,   -38,   -37,   -38,   -31,    -3,   -38,   -12,   -38,
   -38,   -38,   -10,   -38,   -38,   -38,    -8,   -24,   -25,   -26,
   -27,   -28,   -36,   -38,   -38,   -38,   -14,   -15,   -38,   -38,
   -38,   -19,   -20,   -38,   -29,   -38,   -30,   -11,   -13,   -38,
   -38,   -18,   -21,   -35,   -38,   -38,   -22,   -17,   -16,   -38,
   -23 ]

racc_goto_table = [
    36,    18,    16,    24,    14,    56,    55,    35,     2,     7,
     1,    78,    53,   nil,   nil,   nil,    47,    48,    49,    50,
    51,    52,    54,    68,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    60,    63,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    69,    70,   nil,    76,
    77,   nil,   nil,    73,    80 ]

racc_goto_check = [
     4,     5,     3,     5,     6,     8,     7,     5,     2,     2,
     1,     9,    10,   nil,   nil,   nil,     5,     5,     5,     5,
     5,     5,     5,     8,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     3,     5,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     5,     5,   nil,     4,
     4,   nil,   nil,     5,     4 ]

racc_goto_pointer = [
   nil,    10,     8,   -10,   -25,   -12,    -6,   -31,   -32,   -65,
   -21 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,    39,   nil,   nil,    38,   nil,
   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 30, :_reduce_1,
  1, 30, :_reduce_2,
  6, 31, :_reduce_3,
  5, 31, :_reduce_4,
  4, 31, :_reduce_5,
  0, 35, :_reduce_none,
  2, 35, :_reduce_7,
  3, 32, :_reduce_8,
  1, 32, :_reduce_9,
  0, 32, :_reduce_10,
  3, 33, :_reduce_11,
  1, 33, :_reduce_12,
  2, 36, :_reduce_13,
  1, 36, :_reduce_14,
  2, 37, :_reduce_15,
  6, 37, :_reduce_16,
  5, 37, :_reduce_17,
  3, 37, :_reduce_18,
  2, 37, :_reduce_19,
  2, 37, :_reduce_20,
  3, 37, :_reduce_21,
  0, 38, :_reduce_none,
  2, 38, :_reduce_23,
  3, 34, :_reduce_24,
  3, 34, :_reduce_25,
  3, 34, :_reduce_26,
  3, 34, :_reduce_27,
  3, 34, :_reduce_28,
  4, 34, :_reduce_29,
  4, 34, :_reduce_30,
  2, 34, :_reduce_31,
  1, 34, :_reduce_32,
  1, 34, :_reduce_33,
  1, 34, :_reduce_34,
  3, 39, :_reduce_35,
  1, 39, :_reduce_36,
  0, 39, :_reduce_37 ]

racc_reduce_n = 38

racc_shift_n = 81

racc_token_table = {
  false => 0,
  :error => 1,
  :UMINUS => 2,
  "(" => 3,
  "[" => 4,
  "*" => 5,
  "/" => 6,
  "+" => 7,
  "-" => 8,
  "=" => 9,
  "function" => 10,
  :IDENT => 11,
  ")" => 12,
  "const" => 13,
  ";" => 14,
  "var" => 15,
  "@" => 16,
  "," => 17,
  "{" => 18,
  "}" => 19,
  "if" => 20,
  "while" => 21,
  "break" => 22,
  "continue" => 23,
  "return" => 24,
  "else" => 25,
  "]" => 26,
  :NUMBER => 27,
  :STRING => 28 }

racc_nt_base = 29

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "UMINUS",
  "\"(\"",
  "\"[\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\"=\"",
  "\"function\"",
  "IDENT",
  "\")\"",
  "\"const\"",
  "\";\"",
  "\"var\"",
  "\"@\"",
  "\",\"",
  "\"{\"",
  "\"}\"",
  "\"if\"",
  "\"while\"",
  "\"break\"",
  "\"continue\"",
  "\"return\"",
  "\"else\"",
  "\"]\"",
  "NUMBER",
  "STRING",
  "$start",
  "program",
  "decl",
  "arg_list",
  "block",
  "exp",
  "address",
  "statement_list",
  "statement",
  "else_block",
  "exp_list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 11)
  def _reduce_1(val, _values, result)
     result = val[0] + [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 12)
  def _reduce_2(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 15)
  def _reduce_3(val, _values, result)
     result = [:function, val[1], val[3], val[5]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_4(val, _values, result)
     result = [:const, val[1], val[3]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_5(val, _values, result)
     result = [:var, val[1], val[2]] 
    result
  end
.,.,

# reduce 6 omitted

module_eval(<<'.,.,', 'parser.y', 19)
  def _reduce_7(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 22)
  def _reduce_8(val, _values, result)
     result = val[0] + [val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 23)
  def _reduce_9(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_10(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 26)
  def _reduce_11(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 27)
  def _reduce_12(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 29)
  def _reduce_13(val, _values, result)
     result = val[0] + [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 30)
  def _reduce_14(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 32)
  def _reduce_15(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_16(val, _values, result)
     result = [:if, val[2], val[4], val[5]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 34)
  def _reduce_17(val, _values, result)
     result = [:while, val[2], val[4]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 35)
  def _reduce_18(val, _values, result)
     result = [:var, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_19(val, _values, result)
     result = [:break] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 37)
  def _reduce_20(val, _values, result)
     result = [:continue] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_21(val, _values, result)
     result = [:return, val[1]] 
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.y', 40)
  def _reduce_23(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_24(val, _values, result)
     result = [:put, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 43)
  def _reduce_25(val, _values, result)
     result = [:add, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_26(val, _values, result)
     result = [:sub, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_27(val, _values, result)
     result = [:mul, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_28(val, _values, result)
     result = [:div, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_29(val, _values, result)
     result = [:call, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_30(val, _values, result)
     result = [:call, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 49)
  def _reduce_31(val, _values, result)
     result = [:uminus, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_32(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_33(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_34(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_35(val, _values, result)
     result = val[0] + [val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_36(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_37(val, _values, result)
     result = [] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class FcParser
