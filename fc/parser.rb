#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.8
# from Racc grammer file "".
#

require 'racc/parser.rb'
class Parser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     9,    49,    50,   131,    53,    24,    14,     3,   100,    55,
    23,     4,    28,     5,     7,    28,     3,    22,    57,    22,
     4,    14,     5,     7,    53,   101,    53,     8,    14,    55,
    21,    55,    53,     8,    56,    58,     8,    55,    57,    41,
    57,    42,   106,   111,    22,   104,    57,   109,   110,   112,
   113,   114,    43,    53,    56,    58,    56,    58,    55,    53,
    49,    50,    56,    58,    55,    76,    77,    57,    76,    77,
    44,    47,   111,    57,   115,   127,   109,   110,   112,   113,
   114,    53,    20,    56,    58,    19,    55,    53,    45,    56,
    58,   121,    55,   122,    28,    57,    76,    77,    68,    69,
   111,    57,   124,   118,   109,   110,   112,   113,   114,    53,
   125,    56,    58,    18,    55,    22,    17,    56,    58,    16,
    14,    80,    53,    57,    53,    51,    28,    55,    59,    55,
    53,    76,    77,    68,    69,    55,    57,    14,    57,    56,
    58,    11,   106,   111,    57,   104,   138,   109,   110,   112,
   113,   114,    56,    58,    56,    58,    61,    53,   nil,    53,
    56,    58,    55,    53,    55,    53,   nil,   nil,    55,   nil,
    55,    57,   nil,    57,   nil,   106,   111,    57,   104,    57,
   109,   110,   112,   113,   114,   nil,    53,    56,    58,    56,
    58,    55,    53,    56,    58,    56,    58,    55,    53,   nil,
    57,   nil,   nil,    55,    53,   nil,    57,   nil,   nil,    55,
    53,   nil,    57,   nil,   nil,    55,    56,    58,    57,   nil,
   nil,   nil,    56,    58,    57,    53,   nil,   nil,    56,    58,
    55,    53,   nil,    53,    56,    58,    55,    53,    55,    57,
    56,    58,    55,    53,   nil,    57,   nil,    57,    55,   nil,
   nil,    57,   nil,   nil,   nil,    56,    58,    57,   nil,   nil,
   nil,    56,    58,    56,    58,    53,   nil,    56,    58,   nil,
    55,   nil,   nil,    56,    58,   nil,   nil,   nil,   nil,    57,
    53,   nil,   nil,   nil,   nil,    55,    35,    36,    37,    38,
    39,    40,   nil,   nil,    57,    56,    58,   nil,   106,   111,
   nil,   104,   nil,   109,   110,   112,   113,   114,   nil,   nil,
    56,    58,    76,    77,    68,    69,    66,    67,    72,    73,
    74,    75,    70,    71,    65,    76,    77,    68,    69,    66,
    67,    72,    73,    74,    75,    70,    71,    65,   nil,   nil,
   nil,   102,    76,    77,    68,    69,    66,    67,    76,    77,
    68,    69,    66,    67,    81,    76,    77,    68,    69,    66,
    67,    72,    73,    74,    75,    70,    71,    65,   nil,   nil,
   nil,   nil,   nil,   120,    76,    77,    68,    69,    66,    67,
    72,    73,    74,    75,    70,    71,    65,   nil,   nil,   nil,
   nil,   nil,   132,    76,    77,    68,    69,    66,    67,    72,
    73,    74,    75,    70,    71,    65,   nil,   nil,   134,    76,
    77,    68,    69,    66,    67,    72,    73,    74,    75,    70,
    71,    65,   nil,   nil,   133,    76,    77,    68,    69,    66,
    67,    72,    73,    74,    75,    70,    71,    65,   nil,   nil,
    82,    76,    77,    68,    69,    66,    67,    72,    73,    74,
    75,    70,    71,    65,    76,    77,    68,    69,    66,    67,
    72,    73,    74,    75,    70,    71,    65,    76,    77,    68,
    69,    66,    67,    72,    73,    74,    75,    70,    71,    65,
    76,    77,    68,    69,    66,    67,    72,    73,    74,    75,
    70,    71,    65,    76,    77,    68,    69,    66,    67,    72,
    73,    74,    75,    70,    71,    65,    76,    77,    68,    69,
    66,    67,    35,    36,    37,    38,    39,    40,    76,    77,
    68,    69,    66,    67,    76,    77,    68,    69,    66,    67,
    76,    77,    68,    69,    66,    67 ]

racc_action_check = [
     1,    79,    79,   123,    75,    15,   111,     0,    95,    75,
    14,     0,    17,     0,     0,    18,     1,   123,    75,    15,
     1,    20,     1,     1,   133,    95,   122,     0,    22,   133,
    12,   122,   121,    79,    75,    75,     1,   121,   133,    25,
   122,    26,   133,   133,    12,   133,   121,   133,   133,   133,
   133,   133,    28,   117,   133,   133,   122,   122,   117,   114,
    33,    33,   121,   121,   114,    86,    86,   117,    87,    87,
    29,    33,   117,   114,    99,   117,   117,   117,   117,   117,
   117,   104,    11,   117,   117,     9,   104,   101,    30,   114,
   114,   109,   101,   110,    80,   104,    84,    84,    84,    84,
   104,   101,   112,   104,   104,   104,   104,   104,   104,    47,
   113,   104,   104,     8,    47,    31,     7,   101,   101,     6,
     5,    61,    77,    47,   138,    41,    42,    77,    45,   138,
    76,    85,    85,    85,    85,    76,    77,     4,   138,    47,
    47,     3,   138,   138,    76,   138,   135,   138,   138,   138,
   138,   138,    77,    77,   138,   138,    46,   134,   nil,    74,
    76,    76,   134,    73,    74,    72,   nil,   nil,    73,   nil,
    72,   134,   nil,    74,   nil,   134,   134,    73,   134,    72,
   134,   134,   134,   134,   134,   nil,    71,   134,   134,    74,
    74,    71,    70,    73,    73,    72,    72,    70,    69,   nil,
    71,   nil,   nil,    69,    68,   nil,    70,   nil,   nil,    68,
    67,   nil,    69,   nil,   nil,    67,    71,    71,    68,   nil,
   nil,   nil,    70,    70,    67,    66,   nil,   nil,    69,    69,
    66,    65,   nil,    55,    68,    68,    65,    53,    55,    66,
    67,    67,    53,    43,   nil,    65,   nil,    55,    43,   nil,
   nil,    53,   nil,   nil,   nil,    66,    66,    43,   nil,   nil,
   nil,    65,    65,    55,    55,    49,   nil,    53,    53,   nil,
    49,   nil,   nil,    43,    43,   nil,   nil,   nil,   nil,    49,
    97,   nil,   nil,   nil,   nil,    97,    23,    23,    23,    23,
    23,    23,   nil,   nil,    97,    49,    49,   nil,    97,    97,
   nil,    97,   nil,    97,    97,    97,    97,    97,   nil,   nil,
    97,    97,    96,    96,    96,    96,    96,    96,    96,    96,
    96,    96,    96,    96,    96,    63,    63,    63,    63,    63,
    63,    63,    63,    63,    63,    63,    63,    63,   nil,   nil,
   nil,    96,    92,    92,    92,    92,    92,    92,    91,    91,
    91,    91,    91,    91,    63,   108,   108,   108,   108,   108,
   108,   108,   108,   108,   108,   108,   108,   108,   nil,   nil,
   nil,   nil,   nil,   108,   126,   126,   126,   126,   126,   126,
   126,   126,   126,   126,   126,   126,   126,   nil,   nil,   nil,
   nil,   nil,   126,   130,   130,   130,   130,   130,   130,   130,
   130,   130,   130,   130,   130,   130,   nil,   nil,   130,   129,
   129,   129,   129,   129,   129,   129,   129,   129,   129,   129,
   129,   129,   nil,   nil,   129,    64,    64,    64,    64,    64,
    64,    64,    64,    64,    64,    64,    64,    64,   nil,   nil,
    64,    54,    54,    54,    54,    54,    54,    54,    54,    54,
    54,    54,    54,    54,   116,   116,   116,   116,   116,   116,
   116,   116,   116,   116,   116,   116,   116,    94,    94,    94,
    94,    94,    94,    94,    94,    94,    94,    94,    94,    94,
    83,    83,    83,    83,    83,    83,    83,    83,    83,    83,
    83,    83,    83,    62,    62,    62,    62,    62,    62,    62,
    62,    62,    62,    62,    62,    62,    90,    90,    90,    90,
    90,    90,    59,    59,    59,    59,    59,    59,    89,    89,
    89,    89,    89,    89,    88,    88,    88,    88,    88,    88,
    93,    93,    93,    93,    93,    93 ]

racc_action_pointer = [
    -9,     0,   nil,   124,   120,   103,    98,   113,   110,    85,
   nil,    79,     9,   nil,    -9,   -16,   nil,    -5,    -2,   nil,
     4,   nil,    11,   249,   nil,    21,     6,   nil,    33,    52,
    70,    80,   nil,    56,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   104,   109,   240,   nil,   109,   120,   106,   nil,   262,
   nil,   nil,   nil,   234,   438,   230,   nil,   nil,   nil,   475,
   nil,   118,   490,   322,   422,   228,   222,   207,   201,   195,
   189,   183,   162,   160,   156,     1,   127,   119,   nil,    -3,
    77,   nil,   nil,   477,    93,   128,    62,    65,   521,   515,
   503,   345,   339,   527,   464,   -10,   309,   277,   nil,    56,
   nil,    84,   nil,   nil,    78,   nil,   nil,   nil,   352,    88,
    90,   -11,    81,    89,    56,   nil,   451,    50,   nil,   nil,
   nil,    29,    23,   -18,   nil,   nil,   371,   nil,   nil,   406,
   390,   nil,   nil,    21,   154,   115,   nil,   nil,   121,   nil ]

racc_action_default = [
   -71,   -71,    -2,   -71,   -71,   -71,   -71,   -71,   -71,   -71,
    -1,   -71,   -71,   -55,   -71,   -71,    -6,   -71,   -71,   140,
   -52,    -4,   -71,   -71,    -5,   -71,   -48,   -50,   -71,   -71,
   -71,   -53,   -54,   -57,   -62,   -65,   -66,   -67,   -68,   -69,
   -70,   -71,   -71,   -71,   -47,   -71,   -59,   -71,   -61,   -71,
   -64,    -7,   -49,   -71,   -51,   -71,   -39,   -40,   -41,   -71,
   -56,   -71,   -58,   -71,   -71,   -71,   -71,   -71,   -71,   -71,
   -71,   -71,   -71,   -71,   -71,   -71,   -44,   -71,   -36,   -45,
   -71,   -63,   -24,   -25,   -26,   -27,   -28,   -29,   -30,   -31,
   -32,   -33,   -34,   -35,   -43,   -71,   -71,   -71,   -46,   -71,
   -37,   -71,   -38,    -3,   -71,   -10,   -11,   -14,   -71,   -71,
   -71,   -71,   -71,   -71,   -71,   -60,   -42,   -71,    -9,   -13,
   -15,   -71,   -71,   -71,   -19,   -20,   -71,    -8,   -12,   -71,
   -71,   -18,   -21,   -71,   -71,   -22,   -17,   -16,   -71,   -23 ]

racc_goto_table = [
    12,    15,    54,    25,    29,   103,    62,    33,    63,   119,
     2,    10,    64,   117,    78,    97,    31,    98,    30,     1,
   137,    95,   128,    52,    83,    84,    85,    86,    87,    88,
    89,    90,    91,    92,    93,    94,    96,    32,    46,    60,
   nil,   135,   136,    79,   nil,   nil,   139,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   116,   nil,   nil,   nil,   nil,   nil,    99,   nil,   nil,   nil,
   nil,   nil,   nil,   126,   nil,   nil,   nil,   nil,   nil,   nil,
   129,   130,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   123 ]

racc_goto_check = [
     7,     7,    13,     9,     9,     6,    13,     4,    13,    11,
     2,     2,    13,    10,    13,     5,     7,     8,     3,     1,
    14,    15,    11,    17,    13,    13,    13,    13,    13,    13,
    13,    13,    13,    13,    13,    13,    13,    18,    19,    20,
   nil,     6,     6,     4,   nil,   nil,     6,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    13,   nil,   nil,   nil,   nil,   nil,     9,   nil,   nil,   nil,
   nil,   nil,   nil,    13,   nil,   nil,   nil,   nil,   nil,   nil,
    13,    13,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7 ]

racc_goto_pointer = [
   nil,    19,    10,    -2,   -16,   -64,   -92,    -4,   -62,   -14,
   -91,   -95,   nil,   -41,  -115,   -55,   nil,   -19,    15,     5,
    -7,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6,   nil,
   nil,   105,   107,   108,   nil,   nil,    26,    27,    13,   nil,
   nil,    48,    34 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 44, :_reduce_1,
  1, 44, :_reduce_2,
  9, 45, :_reduce_3,
  3, 45, :_reduce_4,
  3, 45, :_reduce_5,
  2, 45, :_reduce_none,
  5, 45, :_reduce_7,
  3, 49, :_reduce_8,
  2, 49, :_reduce_9,
  1, 49, :_reduce_10,
  1, 49, :_reduce_11,
  2, 53, :_reduce_12,
  1, 53, :_reduce_13,
  1, 54, :_reduce_14,
  2, 55, :_reduce_15,
  6, 55, :_reduce_16,
  5, 55, :_reduce_17,
  3, 55, :_reduce_18,
  2, 55, :_reduce_19,
  2, 55, :_reduce_20,
  3, 55, :_reduce_21,
  0, 57, :_reduce_none,
  2, 57, :_reduce_23,
  3, 56, :_reduce_24,
  3, 56, :_reduce_25,
  3, 56, :_reduce_26,
  3, 56, :_reduce_27,
  3, 56, :_reduce_28,
  3, 56, :_reduce_29,
  3, 56, :_reduce_30,
  3, 56, :_reduce_31,
  3, 56, :_reduce_32,
  3, 56, :_reduce_33,
  3, 56, :_reduce_34,
  3, 56, :_reduce_35,
  2, 56, :_reduce_36,
  4, 56, :_reduce_37,
  4, 56, :_reduce_38,
  1, 56, :_reduce_39,
  1, 56, :_reduce_40,
  1, 56, :_reduce_41,
  3, 58, :_reduce_42,
  1, 58, :_reduce_43,
  0, 58, :_reduce_44,
  0, 48, :_reduce_none,
  1, 48, :_reduce_none,
  4, 51, :_reduce_47,
  1, 52, :_reduce_48,
  3, 59, :_reduce_49,
  1, 59, :_reduce_50,
  3, 60, :_reduce_51,
  0, 46, :_reduce_52,
  1, 46, :_reduce_none,
  3, 50, :_reduce_54,
  1, 50, :_reduce_55,
  5, 61, :_reduce_56,
  0, 62, :_reduce_none,
  2, 62, :_reduce_58,
  0, 63, :_reduce_none,
  4, 63, :_reduce_60,
  2, 47, :_reduce_61,
  1, 47, :_reduce_62,
  3, 64, :_reduce_63,
  1, 64, :_reduce_64,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none ]

racc_reduce_n = 71

racc_shift_n = 140

racc_token_table = {
  false => 0,
  :error => 1,
  :UMINUS => 2,
  "(" => 3,
  "[" => 4,
  "*" => 5,
  "/" => 6,
  "+" => 7,
  "-" => 8,
  "<" => 9,
  ">" => 10,
  "<=" => 11,
  ">=" => 12,
  "==" => 13,
  "!=" => 14,
  "=" => 15,
  "function" => 16,
  :IDENT => 17,
  ")" => 18,
  ":" => 19,
  "const" => 20,
  ";" => 21,
  "var" => 22,
  "include_bin" => 23,
  "{" => 24,
  "}" => 25,
  "if" => 26,
  "while" => 27,
  "break" => 28,
  "continue" => 29,
  "return" => 30,
  "else" => 31,
  "]" => 32,
  :NUMBER => 33,
  :STRING => 34,
  "," => 35,
  "options" => 36,
  "int" => 37,
  "uint" => 38,
  "int8" => 39,
  "uint8" => 40,
  "int16" => 41,
  "uint16" => 42 }

racc_nt_base = 43

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "UMINUS",
  "\"(\"",
  "\"[\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\"<\"",
  "\">\"",
  "\"<=\"",
  "\">=\"",
  "\"==\"",
  "\"!=\"",
  "\"=\"",
  "\"function\"",
  "IDENT",
  "\")\"",
  "\":\"",
  "\"const\"",
  "\";\"",
  "\"var\"",
  "\"include_bin\"",
  "\"{\"",
  "\"}\"",
  "\"if\"",
  "\"while\"",
  "\"break\"",
  "\"continue\"",
  "\"return\"",
  "\"else\"",
  "\"]\"",
  "NUMBER",
  "STRING",
  "\",\"",
  "\"options\"",
  "\"int\"",
  "\"uint\"",
  "\"int8\"",
  "\"uint8\"",
  "\"int16\"",
  "\"uint16\"",
  "$start",
  "program",
  "decl",
  "var_decl_list_if",
  "type_decl",
  "options_if",
  "block",
  "var_decl_list",
  "options",
  "option_list",
  "statement_list",
  "statement_i",
  "statement",
  "exp",
  "else_block",
  "exp_list",
  "option_list_sub",
  "option",
  "var_decl",
  "var_init",
  "var_option",
  "type_modifier",
  "basic_type" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 14)
  def _reduce_1(val, _values, result)
     result = val[0] + [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 15)
  def _reduce_2(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_3(val, _values, result)
     result = [:function, val[1], val[3], val[6], val[8]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 18)
  def _reduce_4(val, _values, result)
     result = [:const, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 19)
  def _reduce_5(val, _values, result)
     result = [:var, val[1]] 
    result
  end
.,.,

# reduce 6 omitted

module_eval(<<'.,.,', 'parser.y', 21)
  def _reduce_7(val, _values, result)
     result = [:include_bin, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 23)
  def _reduce_8(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_9(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_10(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 26)
  def _reduce_11(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 28)
  def _reduce_12(val, _values, result)
     result = val[0] + [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 29)
  def _reduce_13(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 34)
  def _reduce_14(val, _values, result)
     info(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_15(val, _values, result)
     result = [:exp, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 37)
  def _reduce_16(val, _values, result)
     result = [:if, val[2], val[4], val[5]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_17(val, _values, result)
     result = [:while, val[2], val[4]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 39)
  def _reduce_18(val, _values, result)
     result = [:var, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 40)
  def _reduce_19(val, _values, result)
     result = [:break] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_20(val, _values, result)
     result = [:continue] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_21(val, _values, result)
     result = [:return, val[1]] 
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_23(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_24(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_25(val, _values, result)
     result = [:load, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_26(val, _values, result)
     result = [:add, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 49)
  def _reduce_27(val, _values, result)
     result = [:sub, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_28(val, _values, result)
     result = [:mul, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_29(val, _values, result)
     result = [:div, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_30(val, _values, result)
     result = [:eq, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_31(val, _values, result)
     result = [:ne, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_32(val, _values, result)
     result = [:lt, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_33(val, _values, result)
     result = [:gt, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_34(val, _values, result)
     result = [:le, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_35(val, _values, result)
     result = [:ge, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_36(val, _values, result)
     result = [:uminus, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_37(val, _values, result)
     result = [:call, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 60)
  def _reduce_38(val, _values, result)
     result = [:index, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_39(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 62)
  def _reduce_40(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_41(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_42(val, _values, result)
     result = val[0] + [val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 66)
  def _reduce_43(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 67)
  def _reduce_44(val, _values, result)
     result = [] 
    result
  end
.,.,

# reduce 45 omitted

# reduce 46 omitted

module_eval(<<'.,.,', 'parser.y', 72)
  def _reduce_47(val, _values, result)
     result = [:options, val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 74)
  def _reduce_48(val, _values, result)
     result = Hash[ *val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 75)
  def _reduce_49(val, _values, result)
     result = val[0] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 76)
  def _reduce_50(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 77)
  def _reduce_51(val, _values, result)
     result = [val[0],val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 81)
  def _reduce_52(val, _values, result)
    result = [] 
    result
  end
.,.,

# reduce 53 omitted

module_eval(<<'.,.,', 'parser.y', 82)
  def _reduce_54(val, _values, result)
     result = val[0]+[val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 83)
  def _reduce_55(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 85)
  def _reduce_56(val, _values, result)
     result = [val[0], val[2], val[3], val[4]] 
    result
  end
.,.,

# reduce 57 omitted

module_eval(<<'.,.,', 'parser.y', 87)
  def _reduce_58(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 59 omitted

module_eval(<<'.,.,', 'parser.y', 88)
  def _reduce_60(val, _values, result)
     result = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 90)
  def _reduce_61(val, _values, result)
     result = [val[1], val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 91)
  def _reduce_62(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 93)
  def _reduce_63(val, _values, result)
     result = [:array, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 94)
  def _reduce_64(val, _values, result)
     result = :pointer 
    result
  end
.,.,

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
