
var vsync_flag:int;
var ppu_ctrl1_bak:int = 0b10000000;
var ppu_ctrl2_bak:int = 0b00011110;
var ppu_scroll1:int = 0;
var ppu_scroll2:int = 0;

var gr_idx:int = 0;
var gr_to_buf:int16[4];
var gr_from_buf:int*[4];
var gr_size_buf:int[4];
var gr_sprite_idx:int = 0;
var gr_sprite_buf:int[256] options (address:0x0700);

var pad_a:int;
var pad_b:int;
var pad_select:int;
var pad_start:int;
var pad_up:int;
var pad_down:int;
var pad_left:int;
var pad_right:int;

function interrupt():void
{
  // 描画の更新を行う
  if( vsync_flag ){
    
    SPRITE_DMA = 7;
    gr_sprite_idx = 0;
    
    var i:int = 0;
    while( i < gr_idx ){
      ppu_put( gr_to_buf[i], gr_from_buf[i], gr_size_buf[i] );
      i += 1;
    }
    gr_idx = 0;
    vsync_flag = 0;
  }
  
  PPU_SCROLL = ppu_scroll1;
  PPU_SCROLL = ppu_scroll2;
  PPU_CTRL1 = ppu_ctrl1_bak;
  PPU_CTRL2 = ppu_ctrl2_bak;

}

function wait_vsync():void
{
  while( gr_sprite_idx < 255 ){
    gr_sprite_buf[gr_sprite_idx] = 0;
    gr_sprite_idx += 1;
  }
  vsync_flag = 1;
  while( vsync_flag ){}
}

function ppu_lock():void
{
  PPU_CTRL1 = 0b00000000;
  PPU_CTRL2 = 0b00000000;
}

function ppu_unlock():void
{
  PPU_CTRL1 = 0b10000000;
  wait_vsync();
}

function ppu_put( to:int16, from:int*, size:int ):void options ( extern:true ) {}

function gr_add( to:int16, from:int*, size:int):void
{
  gr_from_buf[gr_idx] = from;
  gr_to_buf[gr_idx] = to;
  gr_size_buf[gr_idx] = size;
  gr_idx += 1;
}

function gr_sprite( x:int, y:int, pat:int, mode:int ):void
{
  var p:int = gr_sprite_idx;
  gr_sprite_buf[p] = y;
  gr_sprite_buf[p+1] = pat;
  gr_sprite_buf[p+2] = mode;
  gr_sprite_buf[p+3] = x;
  gr_sprite_idx += 4;
}

function gr_sprite2x2( x:int, y:int, pat:int, mode:int ):void
{
  var p:int = gr_sprite_idx;
  gr_sprite_buf[p] = y;
  gr_sprite_buf[p+1] = pat;
  gr_sprite_buf[p+2] = mode;
  gr_sprite_buf[p+3] = x;
  
  gr_sprite_buf[p+4] = y;
  gr_sprite_buf[p+5] = pat+1;
  gr_sprite_buf[p+6] = mode;
  gr_sprite_buf[p+7] = x+8;
  
  gr_sprite_buf[p+8] = y+8;
  gr_sprite_buf[p+9] = pat+16;
  gr_sprite_buf[p+10] = mode;
  gr_sprite_buf[p+11] = x;
  
  gr_sprite_buf[p+12] = y+8;
  gr_sprite_buf[p+13] = pat+17;
  gr_sprite_buf[p+14] = mode;
  gr_sprite_buf[p+15] = x+8;
  gr_sprite_idx += 16;
}

function pad_update():void
{
  PAD_CTRL = 1;
  PAD_CTRL = 0;
  pad_a = PAD_CTRL % 2;
  pad_b = PAD_CTRL % 2;
  pad_select = PAD_CTRL % 2;
  pad_start = PAD_CTRL % 2;
  pad_up = PAD_CTRL % 2;
  pad_down = PAD_CTRL % 2;
  pad_left = PAD_CTRL % 2;
  pad_right = PAD_CTRL % 2;
}

