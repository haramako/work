state 53 contains 1 shift/reduce conflicts


-------- Grammar --------

rule 1 program: function
rule 2 function: "function" IDENT "(" arg_list ")" block
rule 3 arg_list: arg_list "," IDENT
rule 4 arg_list: IDENT
rule 5 block: "{" statement_list "}"
rule 6 block: statement
rule 7 statement_list: statement_list statement
rule 8 statement_list: statement
rule 9 statement: exp ";"
rule 10 statement: "if" "(" exp ")" block else_block
rule 11 statement: "var" arg_list ";"
rule 12 else_block: "else" block
rule 13 else_block: 
rule 14 exp: exp "=" exp
rule 15 exp: exp "+" exp
rule 16 exp: exp "-" exp
rule 17 exp: exp "*" exp
rule 18 exp: exp "/" exp
rule 19 exp: exp "(" exp_list ")"
rule 20 exp: exp "[" exp "]"
rule 21 exp: "-" exp
rule 22 exp: NUMBER
rule 23 exp: IDENT
rule 24 exp: STRING
rule 25 exp_list: exp_list "," exp
rule 26 exp_list: exp
rule 27 exp_list: 

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (23)
    on right: 
    on left : 
  program (24)
    on right: 
    on left : 1
  function (25)
    on right: 1
    on left : 2
  arg_list (26)
    on right: 2 3 11
    on left : 3 4
  block (27)
    on right: 2 10 12
    on left : 5 6
  statement_list (28)
    on right: 5 7
    on left : 7 8
  statement (29)
    on right: 6 7 8
    on left : 9 10 11
  exp (30)
    on right: 9 10 14 15 16 17 18 19 20 21 25 26
    on left : 14 15 16 17 18 19 20 21 22 23 24
  else_block (31)
    on right: 10
    on left : 12 13
  exp_list (32)
    on right: 19 25
    on left : 25 26 27

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  UMINUS (2) 
  "(" (3) 2 10 19
  "[" (4) 20
  "*" (5) 17
  "/" (6) 18
  "+" (7) 15
  "-" (8) 16 21
  "=" (9) 14
  "if" (10) 10
  "else" (11) 12
  "function" (12) 2
  IDENT (13) 2 3 4 23
  ")" (14) 2 10 19
  "," (15) 3 25
  "{" (16) 5
  "}" (17) 5
  ";" (18) 9 11
  "var" (19) 11
  "]" (20) 20
  NUMBER (21) 22
  STRING (22) 24

--------- State ---------

state 0


  "function"    shift, and go to state 3

  program       go to state 1
  function      go to state 2

state 1


  $end          shift, and go to state 4


state 2

   1) program : function _

  $default      reduce using rule 1 (program)


state 3

   2) function : "function" _ IDENT "(" arg_list ")" block

  IDENT         shift, and go to state 5


state 4


  $end          shift, and go to state 6


state 5

   2) function : "function" IDENT _ "(" arg_list ")" block

  "("           shift, and go to state 7


state 6


  $default      accept


state 7

   2) function : "function" IDENT "(" _ arg_list ")" block

  IDENT         shift, and go to state 9

  arg_list      go to state 8

state 8

   2) function : "function" IDENT "(" arg_list _ ")" block
   3) arg_list : arg_list _ "," IDENT

  ")"           shift, and go to state 10
  ","           shift, and go to state 11


state 9

   4) arg_list : IDENT _

  $default      reduce using rule 4 (arg_list)


state 10

   2) function : "function" IDENT "(" arg_list ")" _ block

  "-"           shift, and go to state 18
  "if"          shift, and go to state 16
  IDENT         shift, and go to state 20
  "{"           shift, and go to state 13
  "var"         shift, and go to state 17
  NUMBER        shift, and go to state 19
  STRING        shift, and go to state 21

  block         go to state 12
  statement     go to state 14
  exp           go to state 15

state 11

   3) arg_list : arg_list "," _ IDENT

  IDENT         shift, and go to state 22


state 12

   2) function : "function" IDENT "(" arg_list ")" block _

  $default      reduce using rule 2 (function)


state 13

   5) block : "{" _ statement_list "}"

  "-"           shift, and go to state 18
  "if"          shift, and go to state 16
  IDENT         shift, and go to state 20
  "var"         shift, and go to state 17
  NUMBER        shift, and go to state 19
  STRING        shift, and go to state 21

  statement_list  go to state 23
  statement     go to state 24
  exp           go to state 15

state 14

   6) block : statement _

  $default      reduce using rule 6 (block)


state 15

   9) statement : exp _ ";"
  14) exp : exp _ "=" exp
  15) exp : exp _ "+" exp
  16) exp : exp _ "-" exp
  17) exp : exp _ "*" exp
  18) exp : exp _ "/" exp
  19) exp : exp _ "(" exp_list ")"
  20) exp : exp _ "[" exp "]"

  "("           shift, and go to state 31
  "["           shift, and go to state 32
  "*"           shift, and go to state 29
  "/"           shift, and go to state 30
  "+"           shift, and go to state 27
  "-"           shift, and go to state 28
  "="           shift, and go to state 26
  ";"           shift, and go to state 25


state 16

  10) statement : "if" _ "(" exp ")" block else_block

  "("           shift, and go to state 33


state 17

  11) statement : "var" _ arg_list ";"

  IDENT         shift, and go to state 9

  arg_list      go to state 34

state 18

  21) exp : "-" _ exp

  "-"           shift, and go to state 18
  IDENT         shift, and go to state 20
  NUMBER        shift, and go to state 19
  STRING        shift, and go to state 21

  exp           go to state 35

state 19

  22) exp : NUMBER _

  $default      reduce using rule 22 (exp)


state 20

  23) exp : IDENT _

  $default      reduce using rule 23 (exp)


state 21

  24) exp : STRING _

  $default      reduce using rule 24 (exp)


state 22

   3) arg_list : arg_list "," IDENT _

  $default      reduce using rule 3 (arg_list)


state 23

   5) block : "{" statement_list _ "}"
   7) statement_list : statement_list _ statement

  "-"           shift, and go to state 18
  "if"          shift, and go to state 16
  IDENT         shift, and go to state 20
  "}"           shift, and go to state 36
  "var"         shift, and go to state 17
  NUMBER        shift, and go to state 19
  STRING        shift, and go to state 21

  statement     go to state 37
  exp           go to state 15

state 24

   8) statement_list : statement _

  $default      reduce using rule 8 (statement_list)


state 25

   9) statement : exp ";" _

  $default      reduce using rule 9 (statement)


state 26

  14) exp : exp "=" _ exp

  "-"           shift, and go to state 18
  IDENT         shift, and go to state 20
  NUMBER        shift, and go to state 19
  STRING        shift, and go to state 21

  exp           go to state 38

state 27

  15) exp : exp "+" _ exp

  "-"           shift, and go to state 18
  IDENT         shift, and go to state 20
  NUMBER        shift, and go to state 19
  STRING        shift, and go to state 21

  exp           go to state 39

state 28

  16) exp : exp "-" _ exp

  "-"           shift, and go to state 18
  IDENT         shift, and go to state 20
  NUMBER        shift, and go to state 19
  STRING        shift, and go to state 21

  exp           go to state 40

state 29

  17) exp : exp "*" _ exp

  "-"           shift, and go to state 18
  IDENT         shift, and go to state 20
  NUMBER        shift, and go to state 19
  STRING        shift, and go to state 21

  exp           go to state 41

state 30

  18) exp : exp "/" _ exp

  "-"           shift, and go to state 18
  IDENT         shift, and go to state 20
  NUMBER        shift, and go to state 19
  STRING        shift, and go to state 21

  exp           go to state 42

state 31

  19) exp : exp "(" _ exp_list ")"

  "-"           shift, and go to state 18
  IDENT         shift, and go to state 20
  NUMBER        shift, and go to state 19
  STRING        shift, and go to state 21
  $default      reduce using rule 27 (exp_list)

  exp           go to state 43
  exp_list      go to state 44

state 32

  20) exp : exp "[" _ exp "]"

  "-"           shift, and go to state 18
  IDENT         shift, and go to state 20
  NUMBER        shift, and go to state 19
  STRING        shift, and go to state 21

  exp           go to state 45

state 33

  10) statement : "if" "(" _ exp ")" block else_block

  "-"           shift, and go to state 18
  IDENT         shift, and go to state 20
  NUMBER        shift, and go to state 19
  STRING        shift, and go to state 21

  exp           go to state 46

state 34

   3) arg_list : arg_list _ "," IDENT
  11) statement : "var" arg_list _ ";"

  ","           shift, and go to state 11
  ";"           shift, and go to state 47


state 35

  14) exp : exp _ "=" exp
  15) exp : exp _ "+" exp
  16) exp : exp _ "-" exp
  17) exp : exp _ "*" exp
  18) exp : exp _ "/" exp
  19) exp : exp _ "(" exp_list ")"
  20) exp : exp _ "[" exp "]"
  21) exp : "-" exp _

  $default      reduce using rule 21 (exp)


state 36

   5) block : "{" statement_list "}" _

  $default      reduce using rule 5 (block)


state 37

   7) statement_list : statement_list statement _

  $default      reduce using rule 7 (statement_list)


state 38

  14) exp : exp _ "=" exp
  14) exp : exp "=" exp _
  15) exp : exp _ "+" exp
  16) exp : exp _ "-" exp
  17) exp : exp _ "*" exp
  18) exp : exp _ "/" exp
  19) exp : exp _ "(" exp_list ")"
  20) exp : exp _ "[" exp "]"

  "("           shift, and go to state 31
  "["           shift, and go to state 32
  "*"           shift, and go to state 29
  "/"           shift, and go to state 30
  "+"           shift, and go to state 27
  "-"           shift, and go to state 28
  "="           shift, and go to state 26
  $default      reduce using rule 14 (exp)


state 39

  14) exp : exp _ "=" exp
  15) exp : exp _ "+" exp
  15) exp : exp "+" exp _
  16) exp : exp _ "-" exp
  17) exp : exp _ "*" exp
  18) exp : exp _ "/" exp
  19) exp : exp _ "(" exp_list ")"
  20) exp : exp _ "[" exp "]"

  "("           shift, and go to state 31
  "["           shift, and go to state 32
  "*"           shift, and go to state 29
  "/"           shift, and go to state 30
  $default      reduce using rule 15 (exp)


state 40

  14) exp : exp _ "=" exp
  15) exp : exp _ "+" exp
  16) exp : exp _ "-" exp
  16) exp : exp "-" exp _
  17) exp : exp _ "*" exp
  18) exp : exp _ "/" exp
  19) exp : exp _ "(" exp_list ")"
  20) exp : exp _ "[" exp "]"

  "("           shift, and go to state 31
  "["           shift, and go to state 32
  "*"           shift, and go to state 29
  "/"           shift, and go to state 30
  $default      reduce using rule 16 (exp)


state 41

  14) exp : exp _ "=" exp
  15) exp : exp _ "+" exp
  16) exp : exp _ "-" exp
  17) exp : exp _ "*" exp
  17) exp : exp "*" exp _
  18) exp : exp _ "/" exp
  19) exp : exp _ "(" exp_list ")"
  20) exp : exp _ "[" exp "]"

  "("           shift, and go to state 31
  "["           shift, and go to state 32
  $default      reduce using rule 17 (exp)


state 42

  14) exp : exp _ "=" exp
  15) exp : exp _ "+" exp
  16) exp : exp _ "-" exp
  17) exp : exp _ "*" exp
  18) exp : exp _ "/" exp
  18) exp : exp "/" exp _
  19) exp : exp _ "(" exp_list ")"
  20) exp : exp _ "[" exp "]"

  "("           shift, and go to state 31
  "["           shift, and go to state 32
  $default      reduce using rule 18 (exp)


state 43

  14) exp : exp _ "=" exp
  15) exp : exp _ "+" exp
  16) exp : exp _ "-" exp
  17) exp : exp _ "*" exp
  18) exp : exp _ "/" exp
  19) exp : exp _ "(" exp_list ")"
  20) exp : exp _ "[" exp "]"
  26) exp_list : exp _

  "("           shift, and go to state 31
  "["           shift, and go to state 32
  "*"           shift, and go to state 29
  "/"           shift, and go to state 30
  "+"           shift, and go to state 27
  "-"           shift, and go to state 28
  "="           shift, and go to state 26
  $default      reduce using rule 26 (exp_list)


state 44

  19) exp : exp "(" exp_list _ ")"
  25) exp_list : exp_list _ "," exp

  ")"           shift, and go to state 48
  ","           shift, and go to state 49


state 45

  14) exp : exp _ "=" exp
  15) exp : exp _ "+" exp
  16) exp : exp _ "-" exp
  17) exp : exp _ "*" exp
  18) exp : exp _ "/" exp
  19) exp : exp _ "(" exp_list ")"
  20) exp : exp _ "[" exp "]"
  20) exp : exp "[" exp _ "]"

  "("           shift, and go to state 31
  "["           shift, and go to state 32
  "*"           shift, and go to state 29
  "/"           shift, and go to state 30
  "+"           shift, and go to state 27
  "-"           shift, and go to state 28
  "="           shift, and go to state 26
  "]"           shift, and go to state 50


state 46

  10) statement : "if" "(" exp _ ")" block else_block
  14) exp : exp _ "=" exp
  15) exp : exp _ "+" exp
  16) exp : exp _ "-" exp
  17) exp : exp _ "*" exp
  18) exp : exp _ "/" exp
  19) exp : exp _ "(" exp_list ")"
  20) exp : exp _ "[" exp "]"

  "("           shift, and go to state 31
  "["           shift, and go to state 32
  "*"           shift, and go to state 29
  "/"           shift, and go to state 30
  "+"           shift, and go to state 27
  "-"           shift, and go to state 28
  "="           shift, and go to state 26
  ")"           shift, and go to state 51


state 47

  11) statement : "var" arg_list ";" _

  $default      reduce using rule 11 (statement)


state 48

  19) exp : exp "(" exp_list ")" _

  $default      reduce using rule 19 (exp)


state 49

  25) exp_list : exp_list "," _ exp

  "-"           shift, and go to state 18
  IDENT         shift, and go to state 20
  NUMBER        shift, and go to state 19
  STRING        shift, and go to state 21

  exp           go to state 52

state 50

  20) exp : exp "[" exp "]" _

  $default      reduce using rule 20 (exp)


state 51

  10) statement : "if" "(" exp ")" _ block else_block

  "-"           shift, and go to state 18
  "if"          shift, and go to state 16
  IDENT         shift, and go to state 20
  "{"           shift, and go to state 13
  "var"         shift, and go to state 17
  NUMBER        shift, and go to state 19
  STRING        shift, and go to state 21

  statement     go to state 14
  exp           go to state 15
  block         go to state 53

state 52

  14) exp : exp _ "=" exp
  15) exp : exp _ "+" exp
  16) exp : exp _ "-" exp
  17) exp : exp _ "*" exp
  18) exp : exp _ "/" exp
  19) exp : exp _ "(" exp_list ")"
  20) exp : exp _ "[" exp "]"
  25) exp_list : exp_list "," exp _

  "("           shift, and go to state 31
  "["           shift, and go to state 32
  "*"           shift, and go to state 29
  "/"           shift, and go to state 30
  "+"           shift, and go to state 27
  "-"           shift, and go to state 28
  "="           shift, and go to state 26
  $default      reduce using rule 25 (exp_list)


state 53

  10) statement : "if" "(" exp ")" block _ else_block

  "else"        shift, and go to state 55
  "else"        [reduce using rule 13 (else_block)]
  $default      reduce using rule 13 (else_block)

  else_block    go to state 54

state 54

  10) statement : "if" "(" exp ")" block else_block _

  $default      reduce using rule 10 (statement)


state 55

  12) else_block : "else" _ block

  "-"           shift, and go to state 18
  "if"          shift, and go to state 16
  IDENT         shift, and go to state 20
  "{"           shift, and go to state 13
  "var"         shift, and go to state 17
  NUMBER        shift, and go to state 19
  STRING        shift, and go to state 21

  statement     go to state 14
  exp           go to state 15
  block         go to state 56

state 56

  12) else_block : "else" block _

  $default      reduce using rule 12 (else_block)

