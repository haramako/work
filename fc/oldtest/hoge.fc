// comment
/* comment */
options ( int_size:8, pointer_size:16 );

const CONST:int = 10+10;
var PPU_CTRL1:int options (address:0x2000);
var EXIT:int options (address:0x1003);
var n:int options(address:0x01);

function print(i:int):int { return 0; }

function exit():void { EXIT = 1; }

function main(): int16
{
	n = 0x99;
    var a:int = CONST;
    if( a < 11 ){
        print(3);
    }else{
        print(a);
    }
	exit();
    // var b:uint[3] = [1,2,3];
  /*
  var a:int* = 0, b:uint[3] options (address:0);
  var x:int, y:int;
  var array:int[10];
  array[0] = 0;
  print( array[0] + 1 );
  */
  // a + b;
  // a == b;
  /*
  x = x + 10;
  y = x + x;
  if( x == 10 ){
    x = add( 1, 2 );
    print( x );
  }else{
    x = 2;
  }
  */
    /*
  x = 0;
  y = 0;
  while( x < 10 ){
    print(x);
    x = x + 1;
    array[x] = add( array[x-1], x );
  }
    */
      
  //x == y + (1+CONST);
  /*
  x != y;
  x < y;
  x > y;
  x <= y;
  x >= y;
  x + y;
  x - y;
  x = y;
  x = 2;
  PPU_CTRL1 = 0b00001000;
  while(1){
    PPU_CTRL1 = 0;
  }
  */
  return 0;
}

function add( a:int, b:int ): int
{
  if( a ){
    return a + b;
  }else{
    return a - b;
  }
}

function fib( a:int ): int
{
	if( a <= 0 ){
		return 1;
	}else{
		return fib(a-1) - fib(a-2);
	}
}
