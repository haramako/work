# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: game_dr2.proto

require 'google/protobuf'

require 'master_pb'
require 'game_base_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "GameDr2.GetOffscreenColor" do
    optional :x, :int32, 1
    optional :y, :int32, 2
  end
  add_message "GameDr2.GetOffscreenColorResult" do
    optional :color, :int32, 1
  end
  add_message "GameDr2.Dr2PauseSpriteRelease" do
    optional :releaseFlag, :int32, 1
  end
  add_message "GameDr2.Dr2PbRequest" do
    optional :Mode, :enum, 1, "GameDr2.Dr2PbRequest.PbMode"
  end
  add_enum "GameDr2.Dr2PbRequest.PbMode" do
    value :Top, 0
    value :Map, 1
    value :Kotodama, 2
    value :Present, 3
    value :Report, 4
    value :ReportSkillEx, 5
    value :Regulation, 6
    value :Pet, 7
    value :System, 8
    value :BackLog, 9
    value :KotodamaSelect, 10
    value :PresentSelect, 11
    value :PresentSelectPet, 12
    value :BgEnd, 13
    value :Max, 14
    value :End, 15
    value :None, 255
  end
  add_message "GameDr2.Dr2HsTrial" do
    optional :mode, :enum, 1, "GameDr2.Dr2HsTrial.Mode"
    optional :proc, :int32, 2
    optional :mtb_fever, :bool, 3
  end
  add_enum "GameDr2.Dr2HsTrial.Mode" do
    value :ModeNon, 0
    value :ModeDataLoad, 1
    value :ModeNormalIn, 2
    value :ModeNormalInW, 3
    value :ModeNormalScript, 4
    value :ModeNormalOut, 5
    value :ModeNormalSimpleWindowIn, 6
    value :ModeNormalSimpleWindowOut, 7
    value :ModeNormalFaceClose, 8
    value :ModeNormalFaceCloseSimple, 9
    value :ModeNormalLoad, 10
    value :ModeNormalLoadW, 11
    value :ModeGironIn, 12
    value :ModeGironInspecial, 13
    value :ModeGironScript, 14
    value :ModeGironOut, 15
    value :ModeGironOutspecial, 16
    value :ModeGironBreak, 17
    value :ModeGironKotodamaHit, 18
    value :ModeGironKotodamaMiss, 19
    value :ModeGironTimeout, 20
    value :ModeGironDead, 21
    value :ModeGironTalkIn, 22
    value :ModeGironTalkscript, 23
    value :ModeKokoronpaDataLoad, 24
    value :ModeMax, 25
    value :ModeAnagram2In, 130
    value :ModeAnagram2InTansaku, 131
    value :ModeAnagram2Game, 132
    value :ModeAnagram2Timeout, 133
    value :ModeAnagram2Dead, 134
    value :ModeAnagram2Clear, 135
    value :ModeAnagram2Ng, 136
    value :ModeAnagram2Max, 137
    value :ModeSpotSelectIn, 150
    value :ModeSpotSelectGame, 151
    value :ModeSpotSelectTimeout, 152
    value :ModeSpotSelectOk, 153
    value :ModeSpotSelectClose, 154
    value :ModeSpotSelectMax, 155
    value :ModeMtb2In, 160
    value :ModeMtb2InTansaku, 161
    value :ModeMtb2Game, 162
    value :ModeMtb2Last, 163
    value :ModeMtb2Timeout, 164
    value :ModeMtb2Win, 165
    value :ModeMtb2Lose, 166
    value :ModeMtb2Max, 167
    value :ModeHanronIn, 200
    value :ModeHanronScript, 201
    value :ModeHanronOut, 202
    value :ModeHanronBreak, 203
    value :ModeHanronKotodamaHit, 204
    value :ModeHanronKotodamaMiss, 205
    value :ModeHanronTimeout, 206
    value :ModeHanronDead, 207
    value :ModeHanronHatten, 208
    value :ModeHanronGyakuHatten, 209
    value :ModeHanronTsubazeriai, 210
    value :ModeHanronTalkIn, 211
    value :ModeHanronTalkScript, 212
    value :ModeCriminalSelectIn, 120
    value :ModeCriminalSelectGame, 121
    value :ModeCriminalSelectTimeout, 122
    value :ModeCriminalSelectOk, 123
    value :ModeCriminalSelectMax, 124
  end
  add_message "GameDr2.Dr2HsTrialBullet" do
    optional :mode, :enum, 1, "GameDr2.Dr2HsTrialBullet.Mode"
    optional :prog, :int32, 2
    repeated :bullets, :message, 3, "GameDr2.Dr2HsTrialBullet.Bullet"
    optional :current_bullet, :message, 4, "GameDr2.Dr2HsTrialBullet.Bullet"
    optional :select_no, :int32, 5
    optional :bMode, :enum, 6, "GameDr2.Dr2HsTrialBullet.BMode"
  end
  add_message "GameDr2.Dr2HsTrialBullet.Bullet" do
    optional :id, :int32, 1
    optional :width, :float, 2
    optional :position, :int32, 3
    optional :disp_position, :message, 4, "Game.DrsVector2"
    optional :disp_position2, :message, 5, "Game.DrsVector2"
  end
  add_enum "GameDr2.Dr2HsTrialBullet.Mode" do
    value :ModeNon, 0
    value :ModeIn, 1
    value :ModeDisp, 2
    value :ModeSelectChange, 3
    value :ModeShoot, 4
    value :ModeVib, 5
    value :ModeMemory, 6
    value :ModeClose, 7
    value :ModeLargeChange, 8
    value :ModeLDisp, 9
    value :ModeLSelectNext, 10
    value :ModeLSelectBack, 11
    value :ModeLClose, 12
    value :ModeLsetupIn, 13
    value :ModeLsetupDisp, 14
    value :ModeLsetup, 15
    value :ModeLastIn, 16
    value :ModeLastDisp, 17
    value :ModeLastBack, 18
    value :ModeLastShoot, 19
    value :ModeLSelectTouch, 20
    value :ModeMax, 21
  end
  add_enum "GameDr2.Dr2HsTrialBullet.BMode" do
    value :BModeNon, 0
    value :BModeIn, 1
    value :BModeDisp, 2
    value :BModeSelectChange, 3
    value :BModeShoot, 4
    value :BModeShootError, 5
    value :BModeClose, 6
    value :BModeMemory, 7
    value :BModeLIn, 8
    value :BModeLDisp, 9
    value :BModeLSelectNext, 10
    value :BModeLSelectBack, 11
    value :BModeLSelectTouch, 12
    value :BModeLClose, 13
    value :BModeLSetupIn, 14
    value :BModeLSetupDisp, 15
    value :BModeLastIn, 16
    value :BModeLastPush, 17
    value :BModeLastPushEnd, 18
    value :BModeLastPressStart, 19
    value :BModeLastPress, 20
    value :BModeLastPressOut, 21
    value :BModeLastFuture, 22
    value :BModeLastShoot, 23
    value :BModeClose10, 24
    value :BModeMax, 25
  end
  add_message "GameDr2.Dr2UpdateTrialRequest" do
    optional :change_bullet, :bool, 1
    optional :open_bullet_list, :bool, 2
    optional :select_large_bullet_no, :int32, 3
    optional :close_bullet_list, :bool, 4
    optional :shoot_memory, :bool, 5
    optional :shoot_silencer, :bool, 6
    repeated :silencer_trajectory, :message, 7, "Game.DrsVector2"
  end
  add_message "GameDr2.Dr2HsHanron" do
    optional :sword_mode, :enum, 1, "GameDr2.Dr2HsHanron.SwordMode"
    optional :sword_max, :int32, 2
  end
  add_enum "GameDr2.Dr2HsHanron.SwordMode" do
    value :Non, 0
    value :HanronIn, 1
    value :HanronDisp, 2
    value :HanronOut, 3
    value :HanronRet, 4
    value :HanronChange, 5
    value :HanronKotodamaChange, 6
    value :HanronSlash, 7
    value :KotodamaIn, 8
    value :KotodamaDisp, 9
    value :KotodamaOut, 10
    value :KotodamaRet, 11
    value :KotodamaHanronRet, 12
    value :KotodamaChange, 13
    value :KotodamaHanronChange, 14
    value :KotodamaSetSetup, 15
    value :KotodamaSetIn, 16
    value :KotodamaSetOut, 17
    value :KotodamaSetDisp, 18
    value :KotodamaSetChangeNext, 19
    value :KotodamaSetChangeBack, 20
  end
  add_message "GameDr2.Dr2UpdateHanronRequest" do
    optional :debug_force_win, :bool, 1
    optional :debug_force_tsubazeriai, :bool, 2
    optional :selected_sword, :int32, 3
    optional :touch, :bool, 4
    optional :dragged, :bool, 5
  end
  add_message "GameDr2.Dr2Twilight" do
    optional :active, :bool, 1
    optional :mode, :int32, 2
    optional :is_pause, :bool, 3
  end
  add_message "GameDr2.Dr2UpdateTwilightRequest" do
    optional :move_x, :float, 1
  end
  add_message "GameDr2.Dr2UpdateWorldMapRequest" do
  end
  add_message "GameDr2.Dr2ClimaxInfer" do
    optional :active, :bool, 1
    optional :mode, :int32, 2
  end
  add_message "GameDr2.Dr2UpdateClimaxInferRequest" do
    optional :pos_x, :int32, 1
    optional :pos_y, :int32, 2
    optional :pushed, :bool, 3
    optional :dragging, :bool, 4
    optional :start_dragging, :bool, 6
    optional :drag_delta_x, :int32, 5
  end
  add_message "GameDr2.Dr2HsTansaku" do
    optional :initialized, :bool, 1
    optional :mode, :int32, 2
    optional :sync, :int32, 3
    optional :pad_type, :enum, 4, "GameDr2.Dr2HsTansaku.PadType"
    optional :name_mode, :enum, 5, "GameDr2.Dr2HsTansaku.NameMode"
    optional :name_type, :int32, 6
    optional :scr_mode, :enum, 7, "GameDr2.Dr2HsTansaku.ScrMode"
  end
  add_enum "GameDr2.Dr2HsTansaku.PadType" do
    value :Walk, 0
    value :WalkLr, 1
    value :CameraLr, 2
    value :MapMove, 3
    value :Twilight, 4
    value :Escapse, 5
  end
  add_enum "GameDr2.Dr2HsTansaku.NameMode" do
    value :Non, 0
    value :Wait, 1
    value :In, 2
    value :Disp, 3
    value :Out, 4
    value :Ok, 5
    value :Change, 6
    value :Free, 7
  end
  add_enum "GameDr2.Dr2HsTansaku.ScrMode" do
    value :ScrNon, 0
    value :ScrLoad, 1
    value :ScrFadein, 2
    value :ScrDisp, 3
    value :ScrFadeout, 4
    value :ScrReturn, 5
    value :ScrSelFadein, 6
    value :ScrSelDsip, 7
    value :ScrSelFadeout, 8
    value :ScrSelReturn, 9
    value :ScrIconFadein, 10
    value :ScrIconDisp, 11
    value :ScrIconFadeout, 12
    value :ScrStopFadein, 13
    value :ScrStopDisp, 14
    value :ScrStopFadeout, 15
  end
  add_message "GameDr2.Dr2Tansaku" do
    optional :is_corridor, :bool, 1
    optional :tansaku_state, :message, 2, "GameDr2.Dr2HsTansaku"
  end
  add_message "GameDr2.Dr2MapInfo" do
    optional :id, :int32, 1
    optional :map, :int32, 2
    optional :omit, :bool, 3
    optional :x, :int32, 4
    optional :y, :int32, 5
    optional :name, :string, 6
    optional :chara, :int32, 7
    optional :mapflag, :int32, 8
  end
  add_message "GameDr2.Dr2UpdateMapRequest" do
    optional :select, :bool, 1
    optional :enter, :bool, 2
    optional :select_id, :int32, 3
    optional :select_map, :int32, 4
    optional :left_floor, :bool, 5
    optional :right_floor, :bool, 6
    optional :set_floor, :bool, 7
    optional :back, :bool, 8
    optional :tansaku, :bool, 9
    optional :select_obj, :int32, 10
    optional :select_start, :int32, 11
  end
  add_message "GameDr2.Dr2KotodamaInfoList" do
    repeated :kotodama_list, :message, 1, "GameDr2.Dr2KotodamaInfoList.Dr2KotodamaInfo"
    optional :is_select_mode, :bool, 2
  end
  add_message "GameDr2.Dr2KotodamaInfoList.Dr2KotodamaInfo" do
    optional :id, :int32, 1
    optional :name, :string, 2
  end
  add_message "GameDr2.Dr2KotodamaDetail" do
    optional :id, :int32, 1
    optional :no, :int32, 2
    optional :name, :string, 3
    optional :desc, :string, 4
    optional :is_select_mode, :bool, 5
  end
  add_message "GameDr2.Dr2KotodamaViewRequest" do
    optional :select, :bool, 1
    optional :enter, :bool, 2
    optional :select_id, :int32, 3
    optional :left_item, :bool, 4
    optional :right_item, :bool, 5
    optional :back, :bool, 6
    optional :post, :bool, 7
  end
  add_message "GameDr2.Dr2PresentInfoList" do
    repeated :present_list, :message, 1, "GameDr2.Dr2PresentInfoList.Dr2PresentInfo"
    optional :is_select_mode, :bool, 2
  end
  add_message "GameDr2.Dr2PresentInfoList.Dr2PresentInfo" do
    optional :id, :int32, 1
    optional :name, :string, 2
    optional :get, :bool, 3
    optional :count, :int32, 4
  end
  add_message "GameDr2.Dr2PresentDetail" do
    optional :id, :int32, 1
    optional :no, :int32, 2
    optional :name, :string, 3
    optional :desc, :string, 4
  end
  add_message "GameDr2.Dr2PresentViewRequest" do
    optional :select, :bool, 1
    optional :enter, :bool, 2
    optional :select_id, :int32, 3
    optional :left_item, :bool, 4
    optional :right_item, :bool, 5
    optional :back, :bool, 6
    optional :post, :bool, 7
  end
  add_message "GameDr2.Dr2ReportInfoList" do
    repeated :report_list, :message, 1, "GameDr2.Dr2ReportInfoList.Dr2ReportInfo"
  end
  add_message "GameDr2.Dr2ReportInfoList.Dr2ReportInfo" do
    optional :id, :int32, 1
    optional :dead, :bool, 2
    optional :page, :int32, 3
  end
  add_message "GameDr2.Dr2ReportViewRequest" do
    optional :select, :bool, 1
    optional :enter, :bool, 2
    optional :select_id, :int32, 3
    optional :left_chara, :bool, 4
    optional :right_chara, :bool, 5
    optional :left_page, :bool, 6
    optional :right_page, :bool, 7
    optional :back, :bool, 8
  end
  add_message "GameDr2.Dr2ReportChangeInfo" do
    optional :select_id, :int32, 1
  end
  add_message "GameDr2.Dr2RegurationRequest" do
    optional :left_page, :bool, 1
    optional :right_page, :bool, 2
    optional :back, :bool, 3
  end
  add_message "GameDr2.Dr2HsSequence" do
    optional :mode, :enum, 1, "GameDr2.Dr2HsSequence.Mode"
  end
  add_enum "GameDr2.Dr2HsSequence.Mode" do
    value :ESequence_Type_Progress, 0
    value :ESequence_Type_Boot, 1
    value :ESequence_Type_Title, 2
    value :ESequence_Type_Main_script, 3
    value :ESequence_Type_Novel_script, 4
    value :ESequence_Type_Monomi_mode, 5
    value :ESequence_Type_Max, 6
    value :ESequence_Type_None, 7
  end
  add_message "GameDr2.Dr2HsTitle" do
    optional :mode, :enum, 1, "GameDr2.Dr2HsTitle.Mode"
  end
  add_enum "GameDr2.Dr2HsTitle.Mode" do
    value :ETitleStateInit, 0
    value :ETitleStateFrameInInit, 1
    value :ETitleStateFramein, 2
    value :ETitleStateWait, 3
    value :ETitleStateWaitAnimationOutWait, 4
    value :ETitleStateSelectAnimationInWait, 5
    value :ETitleStateSelect, 6
    value :ETitleStateSelectAnimationOutWait, 7
    value :ETitleStateWipeOutWait, 8
    value :ETitleStateWipeOutWait2, 9
    value :ETitleStateSelectCancelWait, 10
    value :ETitleStateSelectPressStartIn, 11
    value :ETitleStateSelectPressStartInWait, 12
    value :ETitleStateFrameOutInit, 13
    value :ETitleStateFrameOut, 14
    value :ETitleStateOptionWait, 15
    value :ETitleStateLoadWaitToMainMenu, 16
    value :ETitleStateLoadWaitToDangan1, 17
    value :ETitleStateInstallWait, 18
    value :ETitleStateResetWait, 19
    value :ETitleStateMax, 20
  end
  add_message "GameDr2.Dr2UpdateTitleRequest" do
    optional :select, :int32, 1
  end
  add_message "GameDr2.Dr2HsMainMenu" do
    optional :mode, :enum, 1, "GameDr2.Dr2HsMainMenu.Mode"
    optional :chapter_select_cursor, :int32, 2
    optional :special_select_cursor, :int32, 3
    optional :main_menu_state, :enum, 4, "GameDr2.Dr2HsMainMenu.MainMenuMode"
    repeated :fl_label_menu, :int32, 5
    repeated :fl_label_image, :int32, 6
    optional :menu_type, :enum, 7, "GameDr2.Dr2HsMainMenu.MenuType"
  end
  add_enum "GameDr2.Dr2HsMainMenu.Mode" do
    value :EMainMenuStateInit, 0
    value :EMainMenuStateFrameInInit, 1
    value :EMainMenuStateFrameIn, 2
    value :EMainMenuStateFrameBarInWait, 3
    value :EMainMenuStateMainSelect, 4
    value :EMainMenuStateChapterSelect, 5
    value :EMainMenuStateLanguageSelect, 6
    value :EMainMenuStateSpecial, 7
    value :EMainMenuStateOptionInWait, 8
    value :EMainMenuStateOption, 9
    value :EMainMenuStateWindowChapterSelect, 10
    value :EMainMenuStateMainSelectToChapterSelect, 11
    value :EMainMenuStateChapterSelectToMainSelect, 12
    value :EMainMenuStateMainSelectToSpecial, 13
    value :EMainMenuStateSpecialToMainSelect, 14
    value :EMainMenuStateMainSelectInWait, 15
    value :EMainMenuStateChapterSelectInWait, 16
    value :EMainMenuStateSpecialSelectInWait, 17
    value :EMainMenuStateFrameOut, 18
    value :EMainMenuStateConitnueWindowMsg, 19
    value :EMainMenuStateNewGameWindowDifficultSelect, 20
    value :EMainMenuStateChapterPlateSelect, 21
    value :EMainMenuStateChapterWindowDifficultSelect, 22
    value :EMainMenuStateResultCheckWait, 23
    value :EMainMenuStateResultCheck, 24
    value :EMainMenuStateReturnTitleCheck, 25
    value :EMainMenuStateMonomono, 26
    value :EMainMenuStateVendingMachineWait, 27
    value :EMainMenuStateVendingMachine, 28
    value :EMainMenuStateSaveWindowToSpecial, 29
    value :EMainMenuStateMax, 30
  end
  add_enum "GameDr2.Dr2HsMainMenu.MainMenuMode" do
    value :EMainMenuMenuContinue, 0
    value :EMainMenuMenuChapterSelect, 1
    value :EMainMenuMenuMonomi, 2
    value :EMainMenuMenuIsland, 3
    value :EMainMenuMenuNovel, 4
    value :EMainMenuMenuSpecial, 5
    value :EMainMenuMenuOption, 6
    value :EMainMenuMenuMax, 7
  end
  add_enum "GameDr2.Dr2HsMainMenu.MenuType" do
    value :EMainMenuTypeMainMenu, 0
    value :EMainMenuTypeChapterSelect, 1
    value :EMainMenuTypeSpecial, 2
    value :EMainMenuTypeHalfway, 3
    value :EMainMenuTypeMax, 4
  end
  add_message "GameDr2.Dr2UpdateMainMenuRequest" do
    optional :select_main_menu, :int32, 1
    optional :select_special_menu, :int32, 2
    optional :select_chapter, :int32, 3
    optional :select_chapter_plate, :int32, 4
    optional :no_select_se, :bool, 5
  end
  add_message "GameDr2.Dr2CheckWindow" do
    optional :mode, :enum, 1, "GameDr2.Dr2CheckWindow.Mode"
    optional :type, :enum, 2, "GameDr2.Dr2CheckWindow.Type"
    repeated :codes, :int32, 3
    optional :line, :int32, 4
    optional :is_center, :bool, 5
    optional :disp_medal, :int32, 6
  end
  add_enum "GameDr2.Dr2CheckWindow.Mode" do
    value :ECheckWindowStateInit, 0
    value :ECheckWindowStateFrameIn, 1
    value :ECheckWindowStateFrameInWait, 2
    value :ECheckWindowStateMain, 3
    value :ECheckWindowStateFrameOut, 4
    value :ECheckWindowStateEnd, 5
    value :ECheckWindowtateMax, 6
  end
  add_enum "GameDr2.Dr2CheckWindow.Type" do
    value :ECheckWindowTypeOk, 0
    value :ECheckWindowTypeYesAndNo, 1
    value :ECheckWindowTypeOkMedal, 2
    value :ECheckWindowTypeYesAndNoMedal, 3
    value :ECheckWindowTypeMax, 4
  end
  add_message "GameDr2.Dr2UpdateCheckWindowRequest" do
    optional :select, :int32, 1
  end
  add_message "GameDr2.Dr2SpotGetColor" do
    optional :tex_no, :int32, 1
    optional :x, :int32, 2
    optional :y, :int32, 3
  end
  add_message "GameDr2.Dr2SpotGetColorResult" do
    optional :color, :message, 1, "Game.DrsColor"
  end
  add_message "GameDr2.Dr2AdvBriefing" do
    optional :mode, :enum, 1, "GameDr2.Dr2AdvBriefing.Mode"
    repeated :skills, :message, 2, "GameDr2.Dr2AdvBriefing.Skill"
    optional :chapter, :int32, 3
  end
  add_message "GameDr2.Dr2AdvBriefing.Skill" do
    optional :id, :int32, 1
    repeated :name, :int32, 2
    optional :sp, :int32, 3
    optional :equipped, :bool, 4
  end
  add_enum "GameDr2.Dr2AdvBriefing.Mode" do
    value :EBriefingStateInit, 0
    value :EBriefingStateLoading, 1
    value :EBriefingStateFrameIn, 2
    value :EBriefingStateFrameInWait, 3
    value :EBriefingStateMain, 4
    value :EBriefingStateSkillSet, 5
    value :EBriefingStatePocketBookInWait, 6
    value :EBriefingStatePocketBookWait, 7
    value :EBriefingStatePocketBookOutWait, 8
    value :EBriefingStateWindowReturnMainMenu, 9
    value :EBriefingStateWindowDifficult, 10
    value :EBriefingStateWindowNextScene, 11
    value :EBriefingStateHelp, 12
    value :EBriefingStateFrameOut, 13
    value :EBriefingStateEnd, 14
    value :EBriefingStateMax, 15
  end
  add_message "GameDr2.Dr2UpdateAdvBriefingRequest" do
    optional :select_main, :int32, 1
    optional :select_skill, :int32, 2
  end
  add_message "GameDr2.Dr2UpdateSelectRequest" do
    optional :select, :int32, 1
  end
  add_message "GameDr2.Dr2PocketBook" do
    repeated :pb_event_state, :int32, 6
  end
  add_enum "GameDr2.Dr2PocketBook.Mode" do
    value :EPocketBookMenuTop, 0
    value :EPocketBookMenuMap, 1
    value :EPocketBookMenuKotodama, 2
    value :EPocketBookMenuPresent, 3
    value :EPocketBookMenuReport, 4
    value :EPocketBookMenuReportSkillEx, 5
    value :EPocketBookMenuRegulations, 6
    value :EPocketBookMenuPet, 7
    value :EPocketBookMenuSystem, 8
    value :EPocketBookMenuBacklog, 9
    value :EPocketBookMenuKotodamaSelect, 10
    value :EPocketBookMenuPresentSelect, 11
    value :EPocketBookMenuPresentSelectPet, 12
    value :EPocketBookMenuBgEnd, 13
    value :EPocketBookMenuMax, 14
    value :EPocketBookMenuEnd, 15
    value :EPocketBookMenuNone, 255
  end
  add_message "GameDr2.Dr2PbReportSkillEx" do
  end
  add_enum "GameDr2.Dr2PbReportSkillEx.Mode" do
    value :EPbReportSkillExStateInit, 0
    value :EPbReportSkillExStateLoadingStartWait, 1
    value :EPbReportSkillExStateLoading, 2
    value :EPbReportSkillExStateFrameIn, 3
    value :EPbReportSkillExStateFrameInWait, 4
    value :EPbReportSkillExStateMain, 5
    value :EPbReportSkillExStateDetails, 6
    value :EPbReportSkillExStateDetailLerp, 7
    value :EPbReportSkillExStateDetailsGetCheck, 8
    value :EPbReportSkillExStateDetailsGetWait, 9
    value :EPbReportSkillExStateFrameOut, 10
    value :EPbReportSkillExStateEnd, 11
    value :EPbReportSkillExStateMax, 12
  end
  add_message "GameDr2.Dr2SelectLanguage" do
    optional :mode, :enum, 1, "GameDr2.Dr2SelectLanguage.Mode"
    optional :result, :enum, 2, "GameDr2.Dr2SelectLanguage.Result"
    optional :current_select, :int32, 3
  end
  add_enum "GameDr2.Dr2SelectLanguage.Mode" do
    value :StsNon, 0
    value :StsIn, 1
    value :StsWaitAnm, 2
    value :StsWait, 3
    value :StsMain, 4
    value :StsWaitOk, 5
    value :StsOutBl, 6
    value :StsMax, 7
  end
  add_enum "GameDr2.Dr2SelectLanguage.Result" do
    value :RtsNop, 0
    value :RtsAbort, 1
    value :RtsSelectLang, 2
    value :RtsSetWait, 3
    value :RtsSet, 4
    value :RtsMax, 5
  end
  add_message "GameDr2.Dr2UpdateSelectLanguageRequest" do
    optional :select, :int32, 1
    optional :select_region, :int32, 2
  end
  add_message "GameDr2.Dr2DiffWindow" do
    optional :mode, :enum, 1, "GameDr2.Dr2DiffWindow.Mode"
    optional :cursor_mode, :enum, 2, "GameDr2.Dr2DiffWindow.CursorMode"
    repeated :desc, :int32, 3
  end
  add_enum "GameDr2.Dr2DiffWindow.Mode" do
    value :EdiffWindowStateInit, 0
    value :EdiffWindowStateFrameIn, 1
    value :EdiffWindowStateFrameInWait, 2
    value :EdiffWindowStateMain, 3
    value :EdiffWindowStateFrameOut, 4
    value :EdiffWindowStateEnd, 5
    value :EdiffWindowStateMax, 6
  end
  add_enum "GameDr2.Dr2DiffWindow.CursorMode" do
    value :EdiffSelectTypeInference, 0
    value :EdiffSelectTypeAction, 1
    value :EdiffSelectTypeOk, 2
    value :EdiffSelectTypeMax, 3
  end
  add_message "GameDr2.Dr2UpdateDiffWindowRequest" do
    optional :select_inference, :int32, 1
    optional :select_action, :int32, 2
  end
  add_message "GameDr2.Dr2Progress" do
    optional :mode, :enum, 1, "GameDr2.Dr2Progress.Mode"
    optional :old_mode, :enum, 2, "GameDr2.Dr2Progress.Mode"
  end
  add_enum "GameDr2.Dr2Progress.Mode" do
    value :EprogressSceneTitle, 0
    value :EprogressSceneMainMenu, 1
    value :EprogressScenePocketBook, 2
    value :EprogressSceneEventGallery, 3
    value :EprogressSceneMovieGallery, 4
    value :EprogressSceneArtworkGallery, 5
    value :EprogressSceneSoundGallery, 6
    value :EprogressSceneUsamiFlowerChk, 7
    value :EprogressSceneSurvivalTitle, 8
    value :EprogressSceneNovelTitle, 9
    value :EprogressSceneNovelNewgame, 10
    value :EprogressSceneNovelContinue, 11
    value :EprogressSceneSurvivalUi, 12
    value :EprogressSceneSurvivalUiCollect, 13
    value :EprogressSceneMonomiMode, 14
    value :EprogressSceneAdvHelp, 15
    value :EprogressSceneAdvBriefing, 16
    value :EprogressSceneAdvResult, 17
    value :EprogressSceneAdvVending, 18
    value :EprogressSceneNovelMenu, 19
    value :EprogressSceneSampleSystemFont, 20
    value :EprogressSceneSamplePalletAnime, 21
    value :EprogressSceneSurvivalUiCreate, 22
    value :EprogressSceneEnd, 23
    value :EprogressLoadOnlySeqResident, 24
    value :EprogressLoadOnlyOptionSeq, 25
    value :EprogressLoadOnlyOptionPb, 26
    value :EprogressLoadOnlySpecialFont, 27
    value :EprogressLoadOnlyPbMap, 28
    value :EprogressLoadOnlyPbKotodama, 29
    value :EprogressLoadOnlyPbPresent, 30
    value :EprogressLoadOnlyPbReport, 31
    value :EprogressLoadOnlyPbRegulations, 32
    value :EprogressLoadOnlyPbReportSkillEx, 33
    value :EprogressLoadOnlyPbReportTexture, 34
    value :EprogressLoadOnlyPbPetEgg, 35
    value :EprogressLoadOnlyPbPetChibimi, 36
    value :EprogressLoadOnlyPbPetSanagi, 37
    value :EprogressLoadOnlyPbPetGorimi, 38
    value :EprogressLoadOnlyPbPetButami, 39
    value :EprogressLoadOnlyPbPetHebimi, 40
    value :EprogressLoadOnlyPbPetKusomi, 41
    value :EprogressLoadOnlyPbPetUsami, 42
    value :EprogressLoadOnlyPbPetMonokuma, 43
    value :EprogressLoadOnlyPbSystem, 44
    value :EprogressLoadOnlySvUiResident, 45
    value :EprogressLoadOnlySvUiActionSetting, 46
    value :EprogressLoadOnlySvUiItemCreate, 47
    value :EprogressLoadOnlySvUiItemUse, 48
    value :EprogressLoadOnlySvUiItemList, 49
    value :EprogressLoadOnlySvFont, 50
    value :EprogressLoadOnlySvUiCollect, 51
    value :EprogressLoadOnlyAdvHelp, 52
    value :EprogressLoadOnlyAdvHelpMonomi, 53
    value :EprogressLoadOnlyAdvHelpFont, 54
    value :EprogressLoadOnlyAdvBriefing1, 55
    value :EprogressLoadOnlyAdvBriefing2, 56
    value :EprogressLoadOnlyAdvBriefing3, 57
    value :EprogressLoadOnlyAdvBriefing4, 58
    value :EprogressLoadOnlyAdvBriefing5, 59
    value :EprogressLoadOnlyAdvBriefing6, 60
    value :EprogressLoadOnlyAdvResult, 61
    value :EprogressLoadOnlyAdvVendingMachine, 62
    value :EprogressLoadOnlyNovelMenu, 63
    value :EprogressLoadOnlyNovelChara, 64
    value :EprogressSceneNewgame, 65
    value :EprogressSceneContinue, 66
    value :EprogressLoadSeqDiff, 67
    value :EprogressSceneCharacterGallery, 68
    value :EprogressSceneFriendshipGallery, 69
    value :EprogressSceneUltimateGallery, 70
    value :EprogressSceneMax, 71
    value :EprogressSceneNone, 255
  end
  add_enum "GameDr2.Dr2Progress.State" do
    value :EProgressStateLoading, 0
    value :EProgressStateLoadingWait, 1
    value :EProgressStateAction, 2
    value :EProgressStateEnd, 3
    value :EProgressStateMax, 4
  end
  add_message "GameDr2.Dr2GalleryItem" do
    optional :id, :int32, 1
    repeated :name, :int32, 2
    optional :flag, :int32, 3
    optional :price, :int32, 4
    optional :item_no, :int32, 5
  end
  add_message "GameDr2.Dr2EventGallery" do
    optional :mode, :enum, 1, "GameDr2.Dr2EventGallery.Mode"
    repeated :items, :message, 2, "GameDr2.Dr2GalleryItem"
  end
  add_enum "GameDr2.Dr2EventGallery.Mode" do
    value :EeventGalleryStateInit, 0
    value :EeventGalleryStateFrameInInit, 1
    value :EeventGalleryStateFrameIn, 2
    value :EeventGalleryStateEventSelect, 3
    value :EeventGalleryStateBuyWindow, 4
    value :EeventGalleryStateEventCheck, 5
    value :EeventGalleryStateFrameOut, 6
    value :EeventGalleryStateMax, 7
  end
  add_message "GameDr2.Dr2UpdateEventGalleryRequest" do
    optional :select, :int32, 1
  end
  add_message "GameDr2.Dr2MovieGallery" do
    optional :mode, :enum, 1, "GameDr2.Dr2MovieGallery.Mode"
    repeated :items, :message, 2, "GameDr2.Dr2GalleryItem"
  end
  add_enum "GameDr2.Dr2MovieGallery.Mode" do
    value :EmovieGalleryStateInit, 0
    value :EmovieGalleryStateFrameInInit, 1
    value :EmovieGalleryStateFrameIn, 2
    value :EmovieGalleryStateMovieSelect, 3
    value :EmovieGalleryStateBuyWindow, 4
    value :EmovieGalleryStateMovieCheck, 5
    value :EmovieGalleryStateFrameOut, 6
    value :EmovieGalleryStateMax, 7
  end
  add_message "GameDr2.Dr2UpdateMovieGalleryRequest" do
    optional :select, :int32, 1
  end
  add_message "GameDr2.Dr2ArtworkGallery" do
    optional :mode, :enum, 1, "GameDr2.Dr2ArtworkGallery.Mode"
    repeated :items, :message, 2, "GameDr2.Dr2GalleryItem"
  end
  add_enum "GameDr2.Dr2ArtworkGallery.Mode" do
    value :EartworkGalleryStateInit, 0
    value :EartworkGalleryStateFrameInInit, 1
    value :EartworkGalleryStateFrameIn, 2
    value :EartworkGalleryStateArtworkSelect, 3
    value :EartworkGalleryStateBuyWindow, 4
    value :EartworkGalleryStateArtworkCheck, 5
    value :EartworkGalleryStateFrameOut, 6
    value :EartworkGalleryStateMax, 7
  end
  add_message "GameDr2.Dr2UpdateArtworkGalleryRequest" do
    optional :select, :int32, 1
  end
  add_message "GameDr2.Dr2SoundGallery" do
    optional :mode, :enum, 1, "GameDr2.Dr2SoundGallery.Mode"
    repeated :items, :message, 2, "GameDr2.Dr2GalleryItem"
    optional :play_type, :int32, 3
  end
  add_enum "GameDr2.Dr2SoundGallery.Mode" do
    value :EsoundGalleryStateInit, 0
    value :EsoundGalleryStateFrameInInit, 1
    value :EsoundGalleryStateFrameIn, 2
    value :EsoundGalleryStateBgmSelect, 3
    value :EsoundGalleryStateBuyWindow, 4
    value :EsoundGalleryStateFrameOut, 5
    value :EsoundGalleryStateMax, 6
  end
  add_message "GameDr2.Dr2UpdateSoundGalleryRequest" do
    optional :select, :int32, 1
  end
  add_message "GameDr2.Dr2UpdateSpotSelectRequest" do
    optional :x, :float, 1
    optional :y, :float, 2
  end
  add_message "GameDr2.Dr2SystemRequest" do
    optional :save_button_clicked, :bool, 1
    optional :load_button_clicked, :bool, 2
    optional :option_button_clicked, :bool, 3
    optional :titleback_button_clicked, :bool, 4
  end
  add_message "GameDr2.Dr2SystemData" do
    optional :game, :message, 1, "GameDr2.Dr2SystemDataGame"
    optional :option, :message, 2, "GameDr2.Dr2SystemdataOption"
  end
  add_message "GameDr2.Dr2SystemDataGame" do
    optional :chapter_select_flag, :int32, 1
    optional :mode_openflg, :int32, 2
  end
  add_message "GameDr2.Dr2SystemdataOption" do
    optional :action_difficulty, :int32, 1
    optional :inference_difficulty, :int32, 2
  end
  add_message "GameDr2.Dr2SaveDialog" do
    optional :mode, :int32, 1
    repeated :text, :int32, 2
    optional :download_required, :bool, 3
  end
  add_message "GameDr2.Dr2UpdateSaveDialogRequest" do
    optional :select, :int32, 1
    optional :download_complated, :bool, 2
  end
  add_message "GameDr2.Dr2PetViewRequest" do
    optional :present_button_clicked, :bool, 1
    optional :clean_button_clicked, :bool, 2
    optional :reset_button_clicked, :bool, 3
  end
  add_message "GameDr2.Dr2Savedata" do
    repeated :scr_data, :message, 1, "GameDr2.Dr2ScriptData"
    optional :usamif_data, :message, 2, "GameDr2.Dr2UsamifData"
    optional :dr2_gallery_data, :message, 3, "GameDr2.Dr2GalleryData"
    optional :dr2_adventure_data, :message, 4, "GameDr2.Dr2AdventureData"
    optional :dr2_bookmark_data, :message, 5, "GameDr2.Dr2NovelData"
  end
  add_message "GameDr2.Dr2NovelData" do
    optional :novel_continue, :bool, 1
  end
  add_message "GameDr2.Dr2ScriptData" do
    optional :Status, :int32, 1
  end
  add_message "GameDr2.Dr2UsamifData" do
    optional :monokuma_medal, :int32, 1
  end
  add_message "GameDr2.Dr2SurvivalTitle" do
    optional :mode, :enum, 1, "GameDr2.Dr2SurvivalTitle.Mode"
    optional :state, :enum, 2, "GameDr2.Dr2Progress.State"
  end
  add_enum "GameDr2.Dr2SurvivalTitle.Mode" do
    value :EsurvivalTitleStateInit, 0
    value :EsurvivalTitleStateFrameInInit, 1
    value :EsurvivalTitleStateFrameIn, 2
    value :EsurvivalTitleStateSelectAnimationInWait, 3
    value :EsurvivalTitleStateSelect, 4
    value :EsurvivalTitleStateFrameOut, 5
    value :EsurvivalTitleStateCheckWindow1, 6
    value :EsurvivalTitleStateCheckWindow2, 7
    value :EsurvivalTitleStateMax, 8
  end
  add_message "GameDr2.Dr2UpdateSurvivalTitleRequest" do
    optional :select_title, :int32, 1
    optional :select_window1, :int32, 2
    optional :select_window2, :int32, 3
  end
  add_message "GameDr2.Dr2SurvivalActionSelect" do
    optional :mode, :enum, 1, "GameDr2.Dr2SurvivalActionSelect.Mode"
    optional :tutorial_status, :enum, 2, "GameDr2.Dr2Survival.TutorialStatus"
    optional :is_help_mode, :bool, 3
  end
  add_enum "GameDr2.Dr2SurvivalActionSelect.Mode" do
    value :EsvActionSelectStateInit, 0
    value :EsvActionSelectStateLoadingStartWait, 1
    value :EsvActionSelectStateLoading, 2
    value :EsvActionSelectStateFrameIn, 3
    value :EsvActionSelectStateFrameInWait, 4
    value :EsvActionSelectStateMain, 5
    value :EsvActionSelectStateOk, 6
    value :EsvActionSelectStateFrameOut, 7
    value :EsvActionSelectStatePocketBookOutWait, 8
    value :EsvActionSelectStatePocketBookWait, 9
    value :EsvActionSelectStatePocketBookEndFadeWait, 10
    value :EsvActionSelectStateEnd, 11
    value :EsvActionSelectStateHelpIn, 12
    value :EsvActionSelectStateHelpMain, 13
    value :EsvActionSelectStateHelpClose, 14
    value :EsvActionSelectStateMax, 15
  end
  add_message "GameDr2.Dr2UpdateSurvivalActionSelectRequest" do
    optional :select, :int32, 1
    optional :help_request, :bool, 2
  end
  add_message "GameDr2.Dr2Escape" do
    optional :mode, :enum, 1, "GameDr2.Dr2Escape.Mode"
    optional :is_center, :bool, 2
  end
  add_enum "GameDr2.Dr2Escape.Mode" do
    value :EscapeDefault, 0
    value :EscapeInit, 1
    value :EscapeLoadCheck, 2
    value :EscapeStartWait, 100
    value :EscapeItemDetail, 110
    value :EscapeScriptWait1, 180
    value :EscapeScriptWait2, 190
    value :EscapeFadeOut, 200
    value :EscapeEnd, 210
    value :EscapeNumberPre, 300
    value :EscapeNumberInit, 301
    value :EscapeNumberWait, 302
    value :EscapeNumberCursor, 310
    value :EscapeNumberInputWait, 315
    value :EscapeNumberComplete, 320
    value :EscapeNumberEnd1, 321
    value :EscapeNumberEnd2, 322
    value :EscapePasswordPre, 400
    value :EscapePasswordInit2, 401
    value :EscapePasswordInputWait, 410
    value :EscapePasswordInputWait2, 411
    value :EscapePasswordCompletePre, 412
    value :EscapePasswordComplete, 420
  end
  add_message "GameDr2.Dr2EscapeRequest" do
    optional :open, :bool, 1
    optional :close, :bool, 2
    optional :useon, :bool, 3
    optional :useoff, :bool, 4
    optional :select_id, :int32, 5
    optional :up_cursor, :bool, 6
    optional :down_cursor, :bool, 7
    optional :select, :bool, 8
    optional :enter, :bool, 9
    optional :password, :string, 10
    optional :pos_x, :int32, 11
    optional :pos_y, :int32, 12
  end
  add_message "GameDr2.Dr2SurvivalActionSetting" do
    optional :mode, :enum, 1, "GameDr2.Dr2SurvivalActionSetting.Mode"
    optional :clean_level, :int32, 2
    repeated :characters, :message, 3, "GameDr2.Dr2Survival.Character"
  end
  add_enum "GameDr2.Dr2SurvivalActionSetting.Mode" do
    value :EsvActionSettingStateInit, 0
    value :EsvActionSettingStateLoadingStartWait, 1
    value :EsvActionSettingStateLoading, 2
    value :EsvActionSettingStateFrameIn, 3
    value :EsvActionSettingStateFrameInWait, 4
    value :EsvActionSettingStateMain, 5
    value :EsvActionSettingStateCheckWindow, 6
    value :EsvActionSettingStateOk, 7
    value :EsvActionSettingStateFrameOut, 8
    value :EsvActionSettingStateHelpWindow, 9
    value :EsvActionSettingStateEnd, 10
    value :EsvActionSettingStateMax, 11
  end
  add_message "GameDr2.Dr2UpdateSurvivalActionSettingRequest" do
    optional :character_id, :int32, 1
    optional :spot, :enum, 2, "GameDr2.Dr2Survival.Spot"
  end
  add_message "GameDr2.Dr2Survival" do
  end
  add_message "GameDr2.Dr2Survival.Character" do
    optional :status, :enum, 1, "GameDr2.Dr2Survival.Status"
    optional :collect_level, :int32, 2
    optional :clean_level, :int32, 3
    optional :target, :enum, 4, "GameDr2.Dr2Survival.Spot"
    optional :hp, :int32, 5
    optional :id, :int32, 6
    optional :can_receive_current_selected_item, :bool, 7
  end
  add_message "GameDr2.Dr2Survival.Item" do
    optional :id, :int32, 1
    optional :name, :string, 2
    optional :type, :enum, 3, "GameDr2.Dr2Survival.ItemType"
    optional :count, :int32, 4
    optional :isClassTarget, :bool, 5
    optional :icon_type, :enum, 6, "GameDr2.Dr2Survival.IconType"
    optional :target, :enum, 7, "GameDr2.Dr2Survival.TargetCharacter"
    optional :desc, :string, 8
    optional :amenity_type, :enum, 9, "GameDr2.Dr2Survival.AmenityType"
    optional :material_type, :enum, 10, "GameDr2.Dr2Survival.MaterialType"
    optional :can_create, :bool, 11
  end
  add_message "GameDr2.Dr2Survival.CollectItem" do
    optional :id, :int32, 1
    optional :Count, :int32, 2
    optional :material_type, :enum, 3, "GameDr2.Dr2Survival.MaterialType"
    optional :name, :string, 4
  end
  add_enum "GameDr2.Dr2Survival.TutorialStatus" do
    value :NotSvTutorial, 0
    value :ItemCreateOnly, 1
    value :ActionSelectExplain, 2
  end
  add_enum "GameDr2.Dr2Survival.ItemType" do
    value :Target, 0
    value :Tool, 1
    value :Amenity, 2
    value :Goods, 3
    value :Material, 4
  end
  add_enum "GameDr2.Dr2Survival.AmenityType" do
    value :NotAmenity, 0
    value :HpRecovery, 1
    value :ActionRecovery, 2
    value :CleaningRecovery, 3
    value :CollectLevelUp, 4
    value :CleaningLevelUp, 5
    value :HyperMode, 6
  end
  add_enum "GameDr2.Dr2Survival.Status" do
    value :None, 0
    value :NotAction, 1
    value :Hyper, 2
    value :Fine, 3
    value :Normal, 4
    value :Caution, 5
  end
  add_enum "GameDr2.Dr2Survival.Spot" do
    value :EsurvivalCollectPlaceCamp, 0
    value :EsurvivalCollectPlaceCleaning, 1
    value :EsurvivalCollectPlaceRocketpunchMarket, 2
    value :EsurvivalCollectPlaceFarm, 3
    value :EsurvivalCollectPlaceBeach, 4
    value :EsurvivalCollectPlaceRuins, 5
    value :EsurvivalCollectPlaceElectric, 6
    value :EsurvivalCollectPlaceNezumiCastle, 7
    value :EsurvivalCollectPlaceMilitaryInstallation, 8
    value :EsurvivalCollectPlaceMountain, 9
    value :EsurvivalCollectPlaceForest, 10
    value :EsurvivalCollectPlaceSea, 11
    value :EsurvivalCollectPlaceMax, 12
  end
  add_enum "GameDr2.Dr2Survival.IconType" do
    value :NoIcon, 0
    value :Hp, 1
    value :Collect, 2
    value :Clean, 3
    value :ToHyper, 4
  end
  add_enum "GameDr2.Dr2Survival.TargetCharacter" do
    value :Place, 0
    value :One, 1
    value :All, 2
  end
  add_enum "GameDr2.Dr2Survival.MaterialType" do
    value :NotMaterial, 0
    value :Book, 1
    value :Beaker, 2
    value :Pen, 3
    value :Ball, 4
    value :Spanner, 5
  end
  add_message "GameDr2.Dr2SurvivalItemCreate" do
    optional :mode, :enum, 1, "GameDr2.Dr2SurvivalItemCreate.Mode"
    repeated :items, :message, 2, "GameDr2.Dr2Survival.Item"
    optional :item_diff, :int32, 3
  end
  add_enum "GameDr2.Dr2SurvivalItemCreate.Mode" do
    value :EsvItemCreateStateInit, 0
    value :EsvItemCreateStateLoadingStartWait, 1
    value :EsvItemCreateStateLoading, 2
    value :EsvItemCreateStateFrameIn, 3
    value :EsvItemCreateStateFrameInWait, 4
    value :EsvItemCreateStateMain, 5
    value :EsvItemCreateStateOk, 6
    value :EsvItemCreateStateFrameOut, 7
    value :EsvItemCreateStateTutorialEndWait, 8
    value :EsvItemCreateStateTutorialEnd, 9
    value :EsvItemCreateStateEnd, 10
    value :EsvItemCreateStateMax, 11
  end
  add_message "GameDr2.Dr2UpdateSurvivalItemCreateRequest" do
    optional :tab_no, :int32, 1
    optional :item_id, :int32, 2
  end
  add_message "GameDr2.Dr2SurvivalCollect" do
    optional :mode, :enum, 1, "GameDr2.Dr2SurvivalCollect.Mode"
    repeated :collect_items, :message, 2, "GameDr2.Dr2Survival.CollectItem"
  end
  add_enum "GameDr2.Dr2SurvivalCollect.Mode" do
    value :ESvCollectStateInit, 0
    value :ESvCollectStateLoadingStartWait, 1
    value :ESvCollectStateLoading, 2
    value :ESvCollectStateFrameIn, 3
    value :ESvCollectStateFrameInWait, 4
    value :ESvCollectStateStartWait, 5
    value :ESvCollectStateMain, 6
    value :ESvCollectStateFinishWait, 7
    value :ESvCollectStateResult, 8
    value :ESvCollectStateFrameOut, 9
    value :ESvCollectStateEnd, 10
    value :ESvCollectStateMax, 11
  end
  add_message "GameDr2.Dr2SurvivalItemList" do
    optional :mode, :enum, 1, "GameDr2.Dr2SurvivalItemList.Mode"
    optional :clean_level, :int32, 2
    repeated :characters, :message, 3, "GameDr2.Dr2Survival.Character"
    repeated :items, :message, 4, "GameDr2.Dr2Survival.Item"
    optional :item_diff, :int32, 5
    optional :character_diff, :int32, 6
  end
  add_enum "GameDr2.Dr2SurvivalItemList.Mode" do
    value :ESvItemListStateInit, 0
    value :ESvItemListStateLoadingStartWait, 1
    value :ESvItemListStateLoading, 2
    value :ESvItemListStateFrameIn, 3
    value :ESvItemListStateFrameInWait, 4
    value :ESvItemListStateMain, 5
    value :ESvItemListStateItemUse, 6
    value :ESvItemListStateItemUser, 7
    value :ESvItemListStateFrameOut, 8
    value :ESvItemListStateEnd, 9
    value :ESvItemListStateMax, 10
  end
  add_message "GameDr2.Dr2UpdateSurvivalItemListRequest" do
    optional :tab_no, :int32, 1
    optional :item_id, :int32, 2
    optional :target_character, :int32, 3
  end
  add_message "GameDr2.Dr2AdvVending" do
    optional :mode, :enum, 1, "GameDr2.Dr2AdvVending.Mode"
    repeated :items, :message, 2, "GameDr2.Dr2GalleryItem"
  end
  add_enum "GameDr2.Dr2AdvVending.Mode" do
    value :EVendingStateInit, 0
    value :EVendingStateLoading, 1
    value :EVendingStateFrameIn, 2
    value :EVendingStateFrameInWait, 3
    value :EVendingStateMain, 4
    value :EVendingStateBuyWindow, 5
    value :EVendingStateGet, 6
    value :EVendingStatePocketBookInInit, 7
    value :EVendingStatePocketBook, 8
    value :EVendingStatePocketBookOutWait, 9
    value :EVendingStateHelpInInit, 10
    value :EVendingStateHelp, 11
    value :EVendingStateHelpOutWait, 12
    value :EVendingStateFrameOut, 13
    value :EVendingStateEnd, 14
    value :EVendingStateMax, 15
  end
  add_message "GameDr2.Dr2UpdateAdvVendingRequest" do
    optional :select, :int32, 1
  end
  add_message "GameDr2.Dr2UsamiGame" do
    optional :usamiMode, :enum, 1, "GameDr2.Dr2UsamiGame.UsamiMode"
    optional :sceneMode, :enum, 2, "GameDr2.Dr2UsamiGame.SceneMode"
    optional :gameMode, :enum, 3, "GameDr2.Dr2UsamiGame.GameMode"
    optional :BackReady, :bool, 4
    optional :TouchReady, :bool, 5
    optional :CloseReady, :bool, 6
    optional :EquipmentSelect, :bool, 7
    optional :EquipmentListReady, :bool, 8
    optional :GameMoveReady, :bool, 9
    optional :GamePause, :bool, 10
  end
  add_enum "GameDr2.Dr2UsamiGame.UsamiMode" do
    value :UsamiModeLoadinit, 0
    value :UsamiModeLoad, 1
    value :UsamiModeLoading, 2
    value :UsamiModeGame, 3
    value :UsamiModeFade, 4
    value :UsamiModeStageselect, 5
    value :UsamiModeEqip, 6
    value :UsamiModeResult, 7
    value :UsamiModeCresit, 8
    value :UsamiModeTitle, 9
    value :UsamiModeEnd, 10
    value :UsamiModeDebug, 11
    value :UsamiModeUnknown, 999
  end
  add_enum "GameDr2.Dr2UsamiGame.SceneMode" do
    value :SceneModeStageselect, 0
    value :SceneModeLevelselect, 1
    value :SceneModeGame, 2
    value :SceneModeEquip, 3
    value :SceneModeTitle, 4
    value :SceneModeEnd, 5
    value :SceneModeUnknown, 999
  end
  add_enum "GameDr2.Dr2UsamiGame.GameMode" do
    value :ModeInit, 0
    value :ModeLoad, 1
    value :ModeGameinit, 2
    value :ModeStart, 3
    value :ModeWavedisp, 4
    value :ModeMain, 5
    value :ModeDead, 6
    value :ModeMahou, 7
    value :ModeResult, 8
    value :ModePause, 9
    value :ModeSyungoku, 10
    value :ModeClearinit, 11
    value :ModeClear0, 12
    value :ModeClear, 13
    value :ModeEnd, 14
    value :ModeFinish, 15
    value :ModeUnknown, 999
  end
  add_message "GameDr2.Dr2UsamiGameRequest" do
    optional :title_start, :bool, 1
    optional :stageselect_no, :int32, 2
    optional :stageselect_touch, :bool, 3
    optional :equipment_no, :int32, 4
    optional :equipment_select, :int32, 5
    optional :equipment_decision, :bool, 6
    optional :levelselect_left, :bool, 7
    optional :levelselect_right, :bool, 8
    optional :game_pause, :int32, 9
    optional :end_touch, :bool, 10
  end
  add_message "GameDr2.Dr2UsamiEquipmentInfoList" do
    repeated :equipment_list, :message, 1, "GameDr2.Dr2UsamiEquipmentInfoList.Dr2UsamiEquipmentInfo"
  end
  add_message "GameDr2.Dr2UsamiEquipmentInfoList.Dr2UsamiEquipmentInfo" do
    optional :id, :int32, 1
    optional :selected, :bool, 2
    optional :name, :string, 3
    optional :desc, :string, 4
  end
  add_message "GameDr2.Dr2CharacterGallery" do
    optional :active, :bool, 1
  end
  add_message "GameDr2.Dr2UpdateCharacterGalleryRequest" do
    optional :exit, :bool, 1
  end
  add_message "GameDr2.Dr2FriendshipGallery" do
    optional :active, :bool, 1
    optional :mode, :int32, 2
  end
  add_message "GameDr2.Dr2UpdateFriendshipGalleryRequest" do
    optional :exit, :bool, 1
  end
  add_message "GameDr2.Dr2UltimateGallery" do
    optional :active, :bool, 1
    optional :open_dialog, :bool, 2
  end
  add_message "GameDr2.Dr2UpdateUltimateGalleryRequest" do
    optional :exit, :bool, 1
    optional :id, :int32, 2
    optional :price, :int32, 3
  end
  add_message "GameDr2.Dr2BacklogInfoList" do
    repeated :backlog_list, :message, 1, "GameDr2.Dr2BacklogInfoList.Dr2BacklogInfo"
  end
  add_message "GameDr2.Dr2BacklogInfoList.Dr2Font" do
    optional :code, :int32, 1
    optional :type, :int32, 2
    optional :width, :int32, 3
  end
  add_message "GameDr2.Dr2BacklogInfoList.Dr2BacklogInfo" do
    optional :id, :int32, 1
    optional :kind, :int32, 2
    repeated :fonts, :message, 3, "GameDr2.Dr2BacklogInfoList.Dr2Font"
    optional :color, :int32, 4
    optional :chara, :int32, 5
  end
  add_message "GameDr2.Dr2PbOption" do
    optional :mode, :enum, 1, "GameDr2.Dr2PbOption.Mode"
  end
  add_enum "GameDr2.Dr2PbOption.Mode" do
    value :OptionDefault, 0
    value :OptionInit, 1
    value :OptionLoading, 2
    value :OptionFrameIn, 3
    value :OptionFrameIn2, 4
    value :OptionFrameInWait, 5
    value :OptionMain, 6
    value :OptionFrameOut, 7
    value :OptionEnd, 8
  end
  add_message "GameDr2.Dr2OptionRequest" do
    optional :bgm_vol, :int32, 1
    optional :se_vol, :int32, 2
    optional :voice_vol, :int32, 3
    optional :action_diff, :int32, 4
    optional :inference_diff, :int32, 5
    optional :fps_camera_anime, :int32, 6
    optional :target_speed, :int32, 7
    optional :camera_speed, :int32, 8
    optional :enter_default, :bool, 9
  end
  add_message "GameDr2.Dr2ReportSkillExInfoList" do
    repeated :skillex_list, :message, 1, "GameDr2.Dr2ReportSkillExInfoList.Dr2ReportSkillExInfo"
  end
  add_message "GameDr2.Dr2ReportSkillExInfoList.Dr2ReportSkillExInfo" do
    optional :id, :int32, 1
    optional :name, :string, 2
    optional :kakera, :int32, 3
    optional :is_get, :bool, 4
  end
  add_message "GameDr2.Dr2ReportSkillExDetail" do
    optional :id, :int32, 1
    optional :no, :int32, 2
    optional :name, :string, 3
    optional :desc, :string, 4
  end
  add_message "GameDr2.Dr2ReportSkillExViewRequest" do
    optional :select, :bool, 1
    optional :enter, :bool, 2
    optional :select_id, :int32, 3
    optional :left_item, :bool, 4
    optional :right_item, :bool, 5
    optional :back, :bool, 6
    optional :buy, :bool, 7
  end
  add_message "GameDr2.Dr2AdvResult" do
    optional :mode, :enum, 1, "GameDr2.Dr2AdvResult.Mode"
    optional :type, :enum, 2, "GameDr2.Dr2AdvResult.Type"
    optional :phase_max, :int32, 3
  end
  add_enum "GameDr2.Dr2AdvResult.Mode" do
    value :EResultStateInit, 0
    value :EResultStateLoading, 1
    value :EResultStateFrameIn, 2
    value :EResultStateFrameInFadeWait, 3
    value :EResultStateFrameInHankoWait, 4
    value :EResultStateFrameInMenuWait, 5
    value :EResultStateFrameInGradeWait, 6
    value :EResultStateFrameInBigHankoWait, 7
    value :EResultStateFrameInMedalWait, 8
    value :EResultStateFrameInMedalSkillWait, 9
    value :EResultStateMain, 10
    value :EResultStateDetails, 11
    value :EResultStateFrameOut, 12
    value :EResultStateEnd, 13
    value :EResultStateMax, 15
  end
  add_enum "GameDr2.Dr2AdvResult.Type" do
    value :EResultTypeSaiban, 0
    value :EResultTypeMainMenu, 1
    value :EResultTypeMax, 2
  end
  add_message "GameDr2.Dr2UpdateAdvResultRequest" do
    optional :select, :int32, 1
  end
  add_message "GameDr2.Dr2Help" do
    optional :mode, :enum, 1, "GameDr2.Dr2Help.Mode"
  end
  add_enum "GameDr2.Dr2Help.Mode" do
    value :HelpDefault, 0
    value :HelpInit, 1
    value :HelpLoading, 2
    value :HelpFrameIn, 3
    value :HelpFrameInWait, 4
    value :HelpMain, 5
    value :HelpLeap, 6
    value :HelpFrameOut, 7
    value :HelpEnd, 8
  end
  add_message "GameDr2.Dr2HelpInfo" do
    optional :message, :string, 1
    optional :header, :string, 2
  end
  add_message "GameDr2.Dr2Monomono" do
    optional :mode, :int32, 1
  end
  add_message "GameDr2.Dr2UpdateSurvivalSpotSelectRequest" do
    optional :id, :int32, 1
  end
  add_message "GameDr2.Dr2GalleryData" do
    repeated :friendship_gallery_flag, :bool, 1
    repeated :super_art_gallery_flag, :bool, 2
  end
  add_message "GameDr2.Dr2AdventureData" do
    repeated :profLevel, :int32, 1
  end
  add_message "GameDr2.Dr2ReportSkillInfoList" do
    repeated :skill_list, :message, 1, "GameDr2.Dr2ReportSkillInfoList.Dr2ReportSkillInfo"
  end
  add_message "GameDr2.Dr2ReportSkillInfoList.Dr2ReportSkillInfo" do
    optional :id, :int32, 1
    optional :name, :string, 2
    optional :kakera, :int32, 3
    optional :is_get, :bool, 4
  end
  add_message "GameDr2.Dr2ReportSkillDetail" do
    optional :id, :int32, 1
    optional :no, :int32, 2
    optional :name, :string, 3
    optional :desc, :string, 4
  end
  add_message "GameDr2.Dr2ReportSkillViewRequest" do
    optional :select, :bool, 1
    optional :enter, :bool, 2
    optional :select_id, :int32, 3
    optional :left_item, :bool, 4
    optional :right_item, :bool, 5
    optional :back, :bool, 6
  end
  add_message "GameDr2.Dr2PbPet" do
    optional :mode, :enum, 1, "GameDr2.Dr2PbPet.Mode"
    optional :status, :enum, 2, "GameDr2.Dr2PbPet.Status"
  end
  add_enum "GameDr2.Dr2PbPet.Mode" do
    value :PetDefault, 0
    value :PetInit, 1
    value :PetLoadingStartWait, 2
    value :PetLoading, 3
    value :PetFrameIn, 4
    value :PetFrameIn2, 5
    value :PetFrameInWait, 6
    value :PetPresentAnimationWait, 7
    value :PetMain, 8
    value :PetSanran, 9
    value :PetBye, 10
    value :PetPresent, 11
    value :PetGetInAniamtion, 12
    value :PetGet, 13
    value :PetGetOutAnimation, 14
    value :PetBye2, 15
    value :PetFrameOut, 16
    value :PetFrameOut2, 17
    value :PetEnd, 18
  end
  add_enum "GameDr2.Dr2PbPet.Status" do
    value :PetStatusNormal, 0
    value :PetStatusDead, 1
    value :PetStatusSanran, 2
    value :PetStatusHone, 3
  end
  add_message "GameDr2.Dr2ReportGaugeInfo" do
    optional :hp, :int32, 1
    optional :sp, :int32, 2
  end
  add_message "GameDr2.Dr2NovelTitle" do
    optional :mode, :enum, 1, "GameDr2.Dr2NovelTitle.Mode"
  end
  add_enum "GameDr2.Dr2NovelTitle.Mode" do
    value :ENovelTitleStateInit, 0
    value :ENovelTitleStateFrameInInit, 1
    value :ENovelTitleStateFrameIn, 2
    value :ENovelTitleStateSelectAnimationInWait, 3
    value :ENovelTitleStateSelect, 4
    value :ENovelTitleStateCharacterCheckIn, 5
    value :ENovelTitleStateCharacterCheck, 6
    value :ENovelTitleStateFrameOut, 7
    value :ENovelTitleStateSaveWindow, 8
    value :ENovelTitleStateMax, 9
  end
  add_message "GameDr2.Dr2UpdateNovelTitleRequest" do
    optional :select, :int32, 1
  end
  add_message "GameDr2.Dr2Novel" do
    optional :mode, :int32, 1
    optional :can_open_log, :bool, 2
    optional :is_first_page, :bool, 3
    optional :can_input, :bool, 4
  end
  add_message "GameDr2.Dr2NovelMenu" do
    optional :mode, :enum, 1, "GameDr2.Dr2NovelMenu.Mode"
  end
  add_enum "GameDr2.Dr2NovelMenu.Mode" do
    value :ENovelMenuStateInit, 0
    value :ENovelMenuStateLoading, 1
    value :ENovelMenuStateFrameIn, 2
    value :ENovelMenuStateFrameInWait, 3
    value :ENovelMenuStateMain, 4
    value :ENovelMenuStateMainToShiori, 5
    value :ENovelMenuStateShiori, 6
    value :ENovelMenuStateShioriToMain, 7
    value :ENovelMenuStateMainToLoadWindow, 8
    value :ENovelMenuStateLoadWindow, 9
    value :ENovelMenuStateMainToEndWindow, 10
    value :ENovelMenuStateEndWindow, 11
    value :ENovelMenuStateMainToChara, 12
    value :ENovelMenuStateChara, 13
    value :ENovelMenuStateFrameOut, 14
    value :ENovelMenuStateEnd, 15
    value :ENovelMenuStateMax, 16
  end
  add_message "GameDr2.Dr2UpdateNovelMenuRequest" do
    optional :select, :int32, 1
  end
  add_message "GameDr2.Dr2NovelChara" do
    optional :mode, :enum, 1, "GameDr2.Dr2NovelChara.Mode"
    repeated :items, :message, 2, "GameDr2.Dr2GalleryItem"
  end
  add_enum "GameDr2.Dr2NovelChara.Mode" do
    value :ENovelCharaStateInit, 0
    value :ENovelCharaStateLoading, 1
    value :ENovelCharaStateFrameIn, 2
    value :ENovelCharaStateFrameInWait, 3
    value :ENovelCharaStateMain, 4
    value :ENovelCharaStateFrameOut, 5
    value :ENovelCharaStateEnd, 6
    value :ENovelCharaStateMax, 7
  end
  add_message "GameDr2.Dr2UpdateNovelCharaRequest" do
    optional :select, :int32, 1
  end
  add_message "GameDr2.Dr2FriendshipGalleryRequest" do
    optional :id, :int32, 1
  end
  add_message "GameDr2.Dr2SuperArtGalleryRequest" do
    optional :id, :int32, 1
    optional :flag, :int32, 2
  end
  add_message "GameDr2.Dr2HsBgmodel" do
    optional :mode, :enum, 1, "GameDr2.Dr2HsBgmodel.Mode"
    optional :step, :int32, 2
    optional :cnt, :int32, 3
  end
  add_enum "GameDr2.Dr2HsBgmodel.Mode" do
    value :HsBgmodelModeNon, 0
    value :HsBgmodelModeStart, 1
    value :HsBgmodelModeDisp, 2
    value :HsBgmodelModeStart2, 3
    value :HsBgmodelModeStartBg, 4
    value :HsBgmodelModeStartShadow, 5
    value :HsBgmodelModeStartFade, 6
    value :HsBgmodelModeStartMotion, 7
    value :HsBgmodelModeMax, 8
  end
  add_message "GameDr2.Dr2HsTrialWindow" do
    optional :mode, :int32, 1
  end
end

module GameDr2
  GetOffscreenColor = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.GetOffscreenColor").msgclass
  GetOffscreenColorResult = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.GetOffscreenColorResult").msgclass
  Dr2PauseSpriteRelease = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2PauseSpriteRelease").msgclass
  Dr2PbRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2PbRequest").msgclass
  Dr2PbRequest::PbMode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2PbRequest.PbMode").enummodule
  Dr2HsTrial = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsTrial").msgclass
  Dr2HsTrial::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsTrial.Mode").enummodule
  Dr2HsTrialBullet = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsTrialBullet").msgclass
  Dr2HsTrialBullet::Bullet = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsTrialBullet.Bullet").msgclass
  Dr2HsTrialBullet::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsTrialBullet.Mode").enummodule
  Dr2HsTrialBullet::BMode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsTrialBullet.BMode").enummodule
  Dr2UpdateTrialRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateTrialRequest").msgclass
  Dr2HsHanron = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsHanron").msgclass
  Dr2HsHanron::SwordMode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsHanron.SwordMode").enummodule
  Dr2UpdateHanronRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateHanronRequest").msgclass
  Dr2Twilight = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Twilight").msgclass
  Dr2UpdateTwilightRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateTwilightRequest").msgclass
  Dr2UpdateWorldMapRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateWorldMapRequest").msgclass
  Dr2ClimaxInfer = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2ClimaxInfer").msgclass
  Dr2UpdateClimaxInferRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateClimaxInferRequest").msgclass
  Dr2HsTansaku = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsTansaku").msgclass
  Dr2HsTansaku::PadType = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsTansaku.PadType").enummodule
  Dr2HsTansaku::NameMode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsTansaku.NameMode").enummodule
  Dr2HsTansaku::ScrMode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsTansaku.ScrMode").enummodule
  Dr2Tansaku = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Tansaku").msgclass
  Dr2MapInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2MapInfo").msgclass
  Dr2UpdateMapRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateMapRequest").msgclass
  Dr2KotodamaInfoList = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2KotodamaInfoList").msgclass
  Dr2KotodamaInfoList::Dr2KotodamaInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2KotodamaInfoList.Dr2KotodamaInfo").msgclass
  Dr2KotodamaDetail = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2KotodamaDetail").msgclass
  Dr2KotodamaViewRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2KotodamaViewRequest").msgclass
  Dr2PresentInfoList = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2PresentInfoList").msgclass
  Dr2PresentInfoList::Dr2PresentInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2PresentInfoList.Dr2PresentInfo").msgclass
  Dr2PresentDetail = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2PresentDetail").msgclass
  Dr2PresentViewRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2PresentViewRequest").msgclass
  Dr2ReportInfoList = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2ReportInfoList").msgclass
  Dr2ReportInfoList::Dr2ReportInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2ReportInfoList.Dr2ReportInfo").msgclass
  Dr2ReportViewRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2ReportViewRequest").msgclass
  Dr2ReportChangeInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2ReportChangeInfo").msgclass
  Dr2RegurationRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2RegurationRequest").msgclass
  Dr2HsSequence = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsSequence").msgclass
  Dr2HsSequence::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsSequence.Mode").enummodule
  Dr2HsTitle = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsTitle").msgclass
  Dr2HsTitle::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsTitle.Mode").enummodule
  Dr2UpdateTitleRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateTitleRequest").msgclass
  Dr2HsMainMenu = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsMainMenu").msgclass
  Dr2HsMainMenu::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsMainMenu.Mode").enummodule
  Dr2HsMainMenu::MainMenuMode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsMainMenu.MainMenuMode").enummodule
  Dr2HsMainMenu::MenuType = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsMainMenu.MenuType").enummodule
  Dr2UpdateMainMenuRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateMainMenuRequest").msgclass
  Dr2CheckWindow = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2CheckWindow").msgclass
  Dr2CheckWindow::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2CheckWindow.Mode").enummodule
  Dr2CheckWindow::Type = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2CheckWindow.Type").enummodule
  Dr2UpdateCheckWindowRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateCheckWindowRequest").msgclass
  Dr2SpotGetColor = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SpotGetColor").msgclass
  Dr2SpotGetColorResult = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SpotGetColorResult").msgclass
  Dr2AdvBriefing = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2AdvBriefing").msgclass
  Dr2AdvBriefing::Skill = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2AdvBriefing.Skill").msgclass
  Dr2AdvBriefing::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2AdvBriefing.Mode").enummodule
  Dr2UpdateAdvBriefingRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateAdvBriefingRequest").msgclass
  Dr2UpdateSelectRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateSelectRequest").msgclass
  Dr2PocketBook = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2PocketBook").msgclass
  Dr2PocketBook::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2PocketBook.Mode").enummodule
  Dr2PbReportSkillEx = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2PbReportSkillEx").msgclass
  Dr2PbReportSkillEx::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2PbReportSkillEx.Mode").enummodule
  Dr2SelectLanguage = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SelectLanguage").msgclass
  Dr2SelectLanguage::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SelectLanguage.Mode").enummodule
  Dr2SelectLanguage::Result = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SelectLanguage.Result").enummodule
  Dr2UpdateSelectLanguageRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateSelectLanguageRequest").msgclass
  Dr2DiffWindow = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2DiffWindow").msgclass
  Dr2DiffWindow::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2DiffWindow.Mode").enummodule
  Dr2DiffWindow::CursorMode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2DiffWindow.CursorMode").enummodule
  Dr2UpdateDiffWindowRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateDiffWindowRequest").msgclass
  Dr2Progress = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Progress").msgclass
  Dr2Progress::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Progress.Mode").enummodule
  Dr2Progress::State = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Progress.State").enummodule
  Dr2GalleryItem = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2GalleryItem").msgclass
  Dr2EventGallery = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2EventGallery").msgclass
  Dr2EventGallery::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2EventGallery.Mode").enummodule
  Dr2UpdateEventGalleryRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateEventGalleryRequest").msgclass
  Dr2MovieGallery = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2MovieGallery").msgclass
  Dr2MovieGallery::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2MovieGallery.Mode").enummodule
  Dr2UpdateMovieGalleryRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateMovieGalleryRequest").msgclass
  Dr2ArtworkGallery = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2ArtworkGallery").msgclass
  Dr2ArtworkGallery::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2ArtworkGallery.Mode").enummodule
  Dr2UpdateArtworkGalleryRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateArtworkGalleryRequest").msgclass
  Dr2SoundGallery = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SoundGallery").msgclass
  Dr2SoundGallery::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SoundGallery.Mode").enummodule
  Dr2UpdateSoundGalleryRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateSoundGalleryRequest").msgclass
  Dr2UpdateSpotSelectRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateSpotSelectRequest").msgclass
  Dr2SystemRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SystemRequest").msgclass
  Dr2SystemData = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SystemData").msgclass
  Dr2SystemDataGame = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SystemDataGame").msgclass
  Dr2SystemdataOption = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SystemdataOption").msgclass
  Dr2SaveDialog = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SaveDialog").msgclass
  Dr2UpdateSaveDialogRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateSaveDialogRequest").msgclass
  Dr2PetViewRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2PetViewRequest").msgclass
  Dr2Savedata = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Savedata").msgclass
  Dr2NovelData = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2NovelData").msgclass
  Dr2ScriptData = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2ScriptData").msgclass
  Dr2UsamifData = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UsamifData").msgclass
  Dr2SurvivalTitle = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SurvivalTitle").msgclass
  Dr2SurvivalTitle::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SurvivalTitle.Mode").enummodule
  Dr2UpdateSurvivalTitleRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateSurvivalTitleRequest").msgclass
  Dr2SurvivalActionSelect = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SurvivalActionSelect").msgclass
  Dr2SurvivalActionSelect::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SurvivalActionSelect.Mode").enummodule
  Dr2UpdateSurvivalActionSelectRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateSurvivalActionSelectRequest").msgclass
  Dr2Escape = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Escape").msgclass
  Dr2Escape::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Escape.Mode").enummodule
  Dr2EscapeRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2EscapeRequest").msgclass
  Dr2SurvivalActionSetting = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SurvivalActionSetting").msgclass
  Dr2SurvivalActionSetting::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SurvivalActionSetting.Mode").enummodule
  Dr2UpdateSurvivalActionSettingRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateSurvivalActionSettingRequest").msgclass
  Dr2Survival = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Survival").msgclass
  Dr2Survival::Character = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Survival.Character").msgclass
  Dr2Survival::Item = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Survival.Item").msgclass
  Dr2Survival::CollectItem = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Survival.CollectItem").msgclass
  Dr2Survival::TutorialStatus = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Survival.TutorialStatus").enummodule
  Dr2Survival::ItemType = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Survival.ItemType").enummodule
  Dr2Survival::AmenityType = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Survival.AmenityType").enummodule
  Dr2Survival::Status = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Survival.Status").enummodule
  Dr2Survival::Spot = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Survival.Spot").enummodule
  Dr2Survival::IconType = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Survival.IconType").enummodule
  Dr2Survival::TargetCharacter = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Survival.TargetCharacter").enummodule
  Dr2Survival::MaterialType = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Survival.MaterialType").enummodule
  Dr2SurvivalItemCreate = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SurvivalItemCreate").msgclass
  Dr2SurvivalItemCreate::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SurvivalItemCreate.Mode").enummodule
  Dr2UpdateSurvivalItemCreateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateSurvivalItemCreateRequest").msgclass
  Dr2SurvivalCollect = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SurvivalCollect").msgclass
  Dr2SurvivalCollect::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SurvivalCollect.Mode").enummodule
  Dr2SurvivalItemList = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SurvivalItemList").msgclass
  Dr2SurvivalItemList::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SurvivalItemList.Mode").enummodule
  Dr2UpdateSurvivalItemListRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateSurvivalItemListRequest").msgclass
  Dr2AdvVending = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2AdvVending").msgclass
  Dr2AdvVending::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2AdvVending.Mode").enummodule
  Dr2UpdateAdvVendingRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateAdvVendingRequest").msgclass
  Dr2UsamiGame = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UsamiGame").msgclass
  Dr2UsamiGame::UsamiMode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UsamiGame.UsamiMode").enummodule
  Dr2UsamiGame::SceneMode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UsamiGame.SceneMode").enummodule
  Dr2UsamiGame::GameMode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UsamiGame.GameMode").enummodule
  Dr2UsamiGameRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UsamiGameRequest").msgclass
  Dr2UsamiEquipmentInfoList = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UsamiEquipmentInfoList").msgclass
  Dr2UsamiEquipmentInfoList::Dr2UsamiEquipmentInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UsamiEquipmentInfoList.Dr2UsamiEquipmentInfo").msgclass
  Dr2CharacterGallery = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2CharacterGallery").msgclass
  Dr2UpdateCharacterGalleryRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateCharacterGalleryRequest").msgclass
  Dr2FriendshipGallery = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2FriendshipGallery").msgclass
  Dr2UpdateFriendshipGalleryRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateFriendshipGalleryRequest").msgclass
  Dr2UltimateGallery = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UltimateGallery").msgclass
  Dr2UpdateUltimateGalleryRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateUltimateGalleryRequest").msgclass
  Dr2BacklogInfoList = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2BacklogInfoList").msgclass
  Dr2BacklogInfoList::Dr2Font = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2BacklogInfoList.Dr2Font").msgclass
  Dr2BacklogInfoList::Dr2BacklogInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2BacklogInfoList.Dr2BacklogInfo").msgclass
  Dr2PbOption = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2PbOption").msgclass
  Dr2PbOption::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2PbOption.Mode").enummodule
  Dr2OptionRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2OptionRequest").msgclass
  Dr2ReportSkillExInfoList = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2ReportSkillExInfoList").msgclass
  Dr2ReportSkillExInfoList::Dr2ReportSkillExInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2ReportSkillExInfoList.Dr2ReportSkillExInfo").msgclass
  Dr2ReportSkillExDetail = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2ReportSkillExDetail").msgclass
  Dr2ReportSkillExViewRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2ReportSkillExViewRequest").msgclass
  Dr2AdvResult = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2AdvResult").msgclass
  Dr2AdvResult::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2AdvResult.Mode").enummodule
  Dr2AdvResult::Type = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2AdvResult.Type").enummodule
  Dr2UpdateAdvResultRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateAdvResultRequest").msgclass
  Dr2Help = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Help").msgclass
  Dr2Help::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Help.Mode").enummodule
  Dr2HelpInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HelpInfo").msgclass
  Dr2Monomono = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Monomono").msgclass
  Dr2UpdateSurvivalSpotSelectRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateSurvivalSpotSelectRequest").msgclass
  Dr2GalleryData = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2GalleryData").msgclass
  Dr2AdventureData = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2AdventureData").msgclass
  Dr2ReportSkillInfoList = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2ReportSkillInfoList").msgclass
  Dr2ReportSkillInfoList::Dr2ReportSkillInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2ReportSkillInfoList.Dr2ReportSkillInfo").msgclass
  Dr2ReportSkillDetail = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2ReportSkillDetail").msgclass
  Dr2ReportSkillViewRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2ReportSkillViewRequest").msgclass
  Dr2PbPet = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2PbPet").msgclass
  Dr2PbPet::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2PbPet.Mode").enummodule
  Dr2PbPet::Status = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2PbPet.Status").enummodule
  Dr2ReportGaugeInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2ReportGaugeInfo").msgclass
  Dr2NovelTitle = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2NovelTitle").msgclass
  Dr2NovelTitle::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2NovelTitle.Mode").enummodule
  Dr2UpdateNovelTitleRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateNovelTitleRequest").msgclass
  Dr2Novel = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2Novel").msgclass
  Dr2NovelMenu = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2NovelMenu").msgclass
  Dr2NovelMenu::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2NovelMenu.Mode").enummodule
  Dr2UpdateNovelMenuRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateNovelMenuRequest").msgclass
  Dr2NovelChara = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2NovelChara").msgclass
  Dr2NovelChara::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2NovelChara.Mode").enummodule
  Dr2UpdateNovelCharaRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2UpdateNovelCharaRequest").msgclass
  Dr2FriendshipGalleryRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2FriendshipGalleryRequest").msgclass
  Dr2SuperArtGalleryRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2SuperArtGalleryRequest").msgclass
  Dr2HsBgmodel = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsBgmodel").msgclass
  Dr2HsBgmodel::Mode = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsBgmodel.Mode").enummodule
  Dr2HsTrialWindow = Google::Protobuf::DescriptorPool.generated_pool.lookup("GameDr2.Dr2HsTrialWindow").msgclass
end
